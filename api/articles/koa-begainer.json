{"title":"koa begainer","slug":"koa-begainer","date":"2016-05-10T10:48:41.000Z","updated":"2022-01-20T04:12:09.026Z","comments":true,"path":"api/articles/koa-begainer.json","excerpt":"想学习下后端的Node or Koa 相关的知识，目标能实现开发，从一个个网上的例子的一行行代码开始敲起！","covers":null,"content":"<p>想学习下后端的Node or Koa 相关的知识，目标能实现开发，从一个个网上的例子的一行行代码开始敲起！</p>\n<span id=\"more\"></span>\n<h1 id=\"kick-off-koa\"><a href=\"#kick-off-koa\" class=\"headerlink\" title=\"kick-off-koa\"></a><a href=\"https://github.com/koajs/kick-off-koa\">kick-off-koa</a></h1><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>  总共11 个 exercise 想每天做一个呢，结果一下午 complete all。总结：</p>\n<ol>\n<li>简单的英文提示，基本能看懂大概意思，按提示的点能够独立完成。很简单的入门课程！</li>\n<li>对于异步理解很不到位，最后一个exercise: authentication 一直报错：<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">should be redirected to <span class=\"hljs-string\">&#x27;/&#x27;</span><br></code></pre></td></tr></table></figure>\n先’this.redirect=”/“‘ 改为 ‘this.redirct(“/“)’，还是一直报错，最后实在没办法，看了下github 中的解决办法，<br>才发现’var body = parse(this)’ 写错了，应该是’var body = yield parse(this)’ 少了yield。现在对于异步的理解还很浅显，感觉是body 调用的时候数据还没parse完。</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"http://www.jscon.cc/koa-action-1/\">[Koa系列-1]简单入门</a></li>\n<li><a href=\"http://www.jscon.cc/koa-action-2/\">[koa系列-2]路由</a></li>\n</ol>\n<blockquote>\n<p>在kick-off-koa基础上，深入的讲解了下, 其中讲到了两张代码模式：<br>    1. Express-style，用法来自于express框架，它能够开启app.get, app.put, app.post, app.delete等功能<br>    2. Middleware-style,此时将 实例化 一个 koa-route 对象，在这个对象中配置路由规则，然后作为一个中间件塞入到app.use方法中。</p>\n</blockquote>\n<h1 id=\"基于-koa-开发论坛系统\"><a href=\"#基于-koa-开发论坛系统\" class=\"headerlink\" title=\"基于 koa 开发论坛系统\"></a><a href=\"http://cnodejs.org/topic/563f6e708e90ab7c391e9f71\">基于 koa 开发论坛系统</a></h1><h2 id=\"2016-05-05\"><a href=\"#2016-05-05\" class=\"headerlink\" title=\"2016-05-05\"></a>2016-05-05</h2><ol>\n<li><a href=\"http://nswbmw.github.io/N-club/1/1.3.html\">co 和 koa</a> 中理解不了thunk函数</li>\n</ol>\n<h2 id=\"2016-05-09\"><a href=\"#2016-05-09\" class=\"headerlink\" title=\"2016-05-09\"></a>2016-05-09</h2><ol>\n<li><a href=\"https://nswbmw.github.io/N-club/2/2.1.html\">模版系统</a></li>\n</ol>\n<pre><code>主要是 [co-ejs](https://github.com/nswbmw/co-ejs) 的各种报错问题，都提交到 [wiki](https://github.com/nswbmw/co-ejs/issues/2) 中，最后通过 项目中的 demo 中的文件找到的 解决方法！\n\n看了下 [co-ejs setting](https://github.com/nswbmw/co-ejs#settings), 有点被自己蠢哭了，答案都在这里啊！\n&gt; root: view root directory.\n  layout: global layout file, default is layout, set false to disable layout.\n  viewExt: view file extension (default html).\n  cache: cache compiled templates (default true).\n  debug: debug flag (default false).\n  locals: global locals, can be function type, this in the function is koa&#39;s ctx.\n  filters: ejs custom filters.\n  open: open sequence (default &lt;%).\n  close: close sequence (default %&gt;).\n</code></pre>\n<h2 id=\"2016-05-10\"><a href=\"#2016-05-10\" class=\"headerlink\" title=\"2016-05-10\"></a>2016-05-10</h2><ol>\n<li><a href=\"http://nswbmw.github.io/N-club/3/README.html\">路由</a></li>\n</ol>\n<pre><code>window下安装koa-frouter一直报错，看到 [koa-frouter](https://github.com/nswbmw/koa-frouter) 官网的issus 有这个问题，原因是:`出现这个问题是因为windows的文件命名不能带有通配符*` 所以 @作者修改了该问题发布了 koa-frouter@0.3.3版本修复这个安装时候的问题\n\n相关 issuse[npm i koa-frouter --save 报错](https://github.com/nswbmw/koa-frouter/issues/4)\n\n话说koa-frouter, co-ejs 都是这个教程的作者写的啊！\n</code></pre>\n<h2 id=\"2016-05-11\"><a href=\"#2016-05-11\" class=\"headerlink\" title=\"2016-05-11\"></a>2016-05-11</h2><h3 id=\"参数验证与错误处理\"><a href=\"#参数验证与错误处理\" class=\"headerlink\" title=\"参数验证与错误处理\"></a><a href=\"http://nswbmw.github.io/N-club/4/4.1.html\">参数验证与错误处理</a></h3><p>  <a href=\"https://github.com/nswbmw/koa-scheme\">koa-scheme</a> 用于输入输出（this.request, this.response) 数据格式的校验，代码编写后要写测试用例，先看后面的</p>\n<p>  <a href=\"https://github.com/nswbmw/koa-errorhandler\">koa-errorhandler</a></p>\n<h3 id=\"缓存和配置\"><a href=\"#缓存和配置\" class=\"headerlink\" title=\"缓存和配置\"></a><a href=\"http://nswbmw.github.io/N-club/5/5.1.html\">缓存和配置</a></h3><p>  <a href=\"https://github.com/nswbmw/koa-router-cache\">koa-router-cache</a> 匹配路径 请求的cache，业务逻辑层之前的缓存</p>\n<p>  <a href=\"https://github.com/nswbmw/co-cache\">co-cache</a> 业务逻辑之后，数据层之前，把写经常用的查询数据，缓存起来！ 需要用到mongodb ，后面测试</p>\n<p>  <a href=\"https://github.com/nswbmw/config-lite\">config-lite</a> 配置文件的区分调用plugin</p>\n<h2 id=\"2016-05-12\"><a href=\"#2016-05-12\" class=\"headerlink\" title=\"2016-05-12\"></a>2016-05-12</h2><h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a><a href=\"http://nswbmw.github.io/N-club/6/README.html\">测试</a></h3><p>  主要用到的npm <a href=\"https://github.com/blakeembrey/co-mocha\">co-mocha</a> 与 <a href=\"https://github.com/avbel/co-supertest\">co-supertest</a></p>\n<p>  describe // 一直写错了，</p>\n<p>  参考了 <a href=\"http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html\">测试框架 Mocha 实例教程</a> 和 <a href=\"https://cnodejs.org/topic/516526766d38277306c7d277\">初识 mocha in NodeJS</a> </p>\n<p>  <a href=\"http://www.cnblogs.com/wade-xu/p/4673460.html\">带你入门带你飞Ⅱ 使用Mocha + Chai + SuperTest测试Restful API in node.js</a></p>\n<blockquote>\n<p>.send(obj) post 的请求的时候，发送请求参数</p>\n</blockquote>\n<p>  Anything you can do with superagent, you can do with supertest - for example multipart file uploads!<br>  测试上传图片的请求<br>  <figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">request(app)<br>.post(<span class=\"hljs-string\">&#x27;/&#x27;</span>)<br>.field(<span class=\"hljs-string\">&#x27;name&#x27;</span>, <span class=\"hljs-string\">&#x27;my awesome avatar&#x27;</span>)<br>.attach(<span class=\"hljs-string\">&#x27;avatar&#x27;</span>, <span class=\"hljs-string\">&#x27;test/fixtures/homeboy.jpg&#x27;</span>)<br>...<br></code></pre></td></tr></table></figure></p>\n<h2 id=\"2016-05-13\"><a href=\"#2016-05-13\" class=\"headerlink\" title=\"2016-05-13\"></a>2016-05-13</h2><p>  继续测试<br>  <figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">it(<span class=\"hljs-string\">&#x27;post /signup&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> *(<span class=\"hljs-params\">done</span>) </span>&#123;<br>  <span class=\"hljs-keyword\">yield</span> agent.post(<span class=\"hljs-string\">&#x27;/signup&#x27;</span>)<br>  .send(param)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>&#123;<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  &#125;);<br>&#125;);<br><span class=\"hljs-comment\">// 报错信息，感觉是因为 生成器函数中，不能使用 done 参数</span><br><span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> 2000ms exceeded. Ensure the done() callback is being call<br>ed <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">this</span> test.<br></code></pre></td></tr></table></figure></p>\n<h2 id=\"2016-05-16\"><a href=\"#2016-05-16\" class=\"headerlink\" title=\"2016-05-16\"></a>2016-05-16</h2><p>  经过前面的铺垫，开始根据第七章构建一个完整的论坛demo</p>\n<p>  做完7.5 可以开始初步的调试</p>\n<h2 id=\"2016-05-17\"><a href=\"#2016-05-17\" class=\"headerlink\" title=\"2016-05-17\"></a>2016-05-17</h2><h3 id=\"安装mongodb\"><a href=\"#安装mongodb\" class=\"headerlink\" title=\"安装mongodb\"></a>安装mongodb</h3><ol>\n<li><a href=\"http://www.cnblogs.com/linjiqin/p/3192159.html\">Windows7下安装MongoDB</a> </li>\n</ol>\n<p>  吃了路径没有写对的亏，一直启动不成功，以后要注意</p>\n<h3 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h3><ol>\n<li>node app.js 报错:<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">bbs@1.0.0 start f:\\Users\\dev\\bbs<br>node app.js<br><br>f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schema.js:556<br>    throw new TypeError(<span class=\"hljs-string\">&#x27;Undefined type `&#x27;</span> + name + <span class=\"hljs-string\">&#x27;` at `&#x27;</span> + path +<br>    ^<br><br>TypeError: Undefined <span class=\"hljs-built_in\">type</span> `C` at `0`<br>  Did you try nesting Schemas? You can only nest using refs or arrays.<br>    at Function.Schema.interpretAsType (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\l<br>ib\\schema.js:556:11)<br>    at Schema.path (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schema.js:464:29)<br><br>    at Schema.add (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schema.js:348:12)<br>    at new Schema (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schema.js:94:10)<br>    at Schema (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schema.js:67:12)<br>    at Object.&lt;anonymous&gt; (f:\\Users\\dev\\bbs\\models\\comment.js:18:18)<br>    at Module._compile (module.js:409:26)<br>    at Object.Module._extensions..js (module.js:416:10)<br>    at Module.load (module.js:343:32)<br>    at Function.Module._load (module.js:300:12)<br>    at Module.require (module.js:353:17)<br>    at require (internal/module.js:12:17)<br>    at Object.&lt;anonymous&gt; (f:\\Users\\dev\\bbs\\models\\index.js:13:19)<br>    at Module._compile (module.js:409:26)<br>    at Object.Module._extensions..js (module.js:416:10)<br>    at Module.load (module.js:343:32)<br><br>npm ERR! Windows_NT 6.1.7601<br>npm ERR! argv <span class=\"hljs-string\">&quot;C:\\\\Program Files\\\\nodejs\\\\node.exe&quot;</span> <span class=\"hljs-string\">&quot;C:\\\\Users\\\\KevinSu\\\\AppData</span><br><span class=\"hljs-string\">\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js&quot;</span> <span class=\"hljs-string\">&quot;start&quot;</span><br>npm ERR! node v4.4.3<br>npm ERR! npm  v3.8.7<br>npm ERR! code ELIFECYCLE<br>npm ERR! bbs@1.0.0 start: `node app.js`<br>npm ERR! Exit status 1<br>npm ERR!<br>npm ERR! Failed at the bbs@1.0.0 start script <span class=\"hljs-string\">&#x27;node app.js&#x27;</span>.<br>npm ERR! Make sure you have the latest version of node.js and npm installed.<br>npm ERR! If you <span class=\"hljs-keyword\">do</span>, this is most likely a problem with the bbs package,<br>npm ERR! not with npm itself.<br>npm ERR! Tell the author that this fails on your system:<br>npm ERR!     node app.js<br>npm ERR! You can get information on how to open an issue <span class=\"hljs-keyword\">for</span> this project with:<br>npm ERR!     npm bugs bbs<br>npm ERR! Or <span class=\"hljs-keyword\">if</span> that isn<span class=\"hljs-string\">&#x27;t available, you can get their info via:</span><br><span class=\"hljs-string\">npm ERR!     npm owner ls bbs</span><br><span class=\"hljs-string\">npm ERR! There is likely additional logging output above.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">npm ERR! Please include the following file with any support request:</span><br><span class=\"hljs-string\">npm ERR!     f:\\Users\\dev\\bbs\\npm-debug.log</span><br></code></pre></td></tr></table></figure></li>\n</ol>\n<p>  重点错误信息：<br>  <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">TypeError: Undefined <span class=\"hljs-built_in\">type</span> `C` at `0`<br>    Did you try nesting Schemas? You can only nest using refs or arrays.<br>      at Function.Schema.interpretAsType (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\l<br>  ib\\schema.js:556:11)<br></code></pre></td></tr></table></figure><br>  和 <code>at Object.&lt;anonymous&gt; (f:\\Users\\dev\\bbs\\models\\comment.js:18:18)</code>  定位代码错误的位置</p>\n<p>  百度 错误 得到的是 <a href=\"http://stackoverflow.com/questions/27259449/mongoose-error-nesting-schemas\">Mongoose error: nesting Schemas</a> 没看懂，感觉是mongodb 的使用出问题了，直接去 <a href=\"https://github.com/Automattic/mongoose/issues\">mongoose 官网issuse</a></p>\n<p>  发现错误 <code>module.exports = Schema(&#39;Comment&#39;, CommontSchema);</code> 写错了，应该是<code>module.exports = mongoose.model(&#39;Comment&#39;, CommontSchema);</code></p>\n<h2 id=\"2016-05-18\"><a href=\"#2016-05-18\" class=\"headerlink\" title=\"2016-05-18\"></a>2016-05-18</h2><p>  继续昨天的调试</p>\n<ol>\n<li><p><a href=\"http://nswbmw.github.io/N-club/7/README.html\">7.1. 基础项目搭建</a> 中<code>default.js</code> 关于 routerCacheConf 的配置是以前旧版本的koa-router-cache的使用方法，运行会报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">  Error: `key` must be string or generatorFunction!<br>    at module.exports (f:\\Users\\dev\\bbs\\node_modules\\koa-router-cache\\lib\\index.<br>js:13:13)<br>    at Object.&lt;anonymous&gt; (f:\\Users\\dev\\bbs\\app.js:32:9)<br>    at Module._compile (module.js:409:26)<br>    at Object.Module._extensions..js (module.js:416:10)<br>    at Module.load (module.js:343:32)<br>    at Function.Module._load (module.js:300:12)<br>    at Function.Module.runMain (module.js:441:10)<br>    at startup (node.js:139:18)<br>    at node.js:968:3<br></code></pre></td></tr></table></figure>\n<p>新的配置方法请参考 <a href=\"https://github.com/nswbmw/koa-router-cache\">koa-router-cache</a></p>\n</li>\n<li><p>然后就可以启动了 简单的<code>node app.js</code> 看到没报错启动成功了，可以直接 <code> http://localhost:3000</code>页面报错，cli里面不报错，想了半天原因，后面才想去没有index.html 页面，只有signup页面，直接访问 <code>http://localhost:3000/signup</code>就OK了！</p>\n</li>\n<li><p>5章节就OK啦！继续下一节了！</p>\n</li>\n</ol>\n<h2 id=\"2016-05-19\"><a href=\"#2016-05-19\" class=\"headerlink\" title=\"2016-05-19\"></a>2016-05-19</h2><p>  7.8 章节点code 了，next code  7.9 章节</p>\n<h2 id=\"2016-05-20\"><a href=\"#2016-05-20\" class=\"headerlink\" title=\"2016-05-20\"></a>2016-05-20</h2><p>  昨天调试了几个bug，都是代码单词拼写错误或者分号缺少造成的语法错误，<code>node app.js</code>已经可以运行，但是首页打不开，今天继续调试！</p>\n<p>  感觉进步啊，不知道为啥，路由的不起作用，</p>\n<p>  next:</p>\n<pre><code>1. vscode debug 功能学习下\n2. router/topic/_id 不进入\n</code></pre>\n<h2 id=\"2016-05-23\"><a href=\"#2016-05-23\" class=\"headerlink\" title=\"2016-05-23\"></a>2016-05-23</h2><p>  /index 不响应，后台不报错， 浏览器无响应，不知道从何入手啊!</p>\n<p>  翻了下 <a href=\"https://github.com/nswbmw/N-club/issues\">N-club issuse</a>, 感觉是自己没起redis 服务，在 <a href=\"https://github.com/nswbmw/N-club/issues/5#issuecomment-206723697\">co-cache这个模块用到了redis</a> 中作者明确说 <code>需要同时开启mongoDB和redis的</code>, 参考 <a href=\"http://blog.csdn.net/renfufei/article/details/38474435\">Windows下安装并设置Redis</a> 安装开启redis 服务</p>\n<h2 id=\"2016-05-27\"><a href=\"#2016-05-27\" class=\"headerlink\" title=\"2016-05-27\"></a>2016-05-27</h2><ol>\n<li><p><a href=\"http://keenwon.com/1275.html\">在windows上部署使用Redis</a> 设置redis 为系统服务</p>\n</li>\n<li><p>debug 到 <code>userCard.ejs</code> 中 <code>&lt;% var userInfo = yield $User.getUserByName(name) %&gt;</code> 这行出错了！，再具体的不知道bug 的原因</p>\n</li>\n</ol>\n<h2 id=\"2016-05-30\"><a href=\"#2016-05-30\" class=\"headerlink\" title=\"2016-05-30\"></a>2016-05-30</h2><h3 id=\"bug-解决办法\"><a href=\"#bug-解决办法\" class=\"headerlink\" title=\"bug 解决办法\"></a>bug 解决办法</h3><ol>\n<li>学习 vscode debug koa 的方法，看下是否可以定位到具体的bug</li>\n</ol>\n<p>  参考: <a href=\"https://cnodejs.org/topic/572209ea35af8a704195f552\">【视频教程】使用vscode调试koa2-example</a></p>\n<ol start=\"2\">\n<li>学习下一章写测试 test , 关于 ‘$User.getUserByName(name)’ 的测试，看是否能找出bug</li>\n</ol>\n<h3 id=\"post-signin-bug\"><a href=\"#post-signin-bug\" class=\"headerlink\" title=\"post /signin  bug\"></a>post /signin  bug</h3><p>  先开始发现mongodb 中存入的密码是明文，然后登陆的时候是 比对的 是md5的值，发现注册的时候，schema中 md5(password) 的值没有赋值给body, 而是赋值给了this，所以body 中的还是明文的密码</p>\n<p>  然后登陆 post /signin  是报错了！</p>\n<p>  错误提示<br>  <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">koa-generic-session <span class=\"hljs-built_in\">set</span> error: Cannot <span class=\"hljs-built_in\">read</span> property <span class=\"hljs-string\">&#x27;maxAge&#x27;</span> of undefined<br>  at MongoStore.set$ (f:\\Users\\dev\\bbs\\node_modules\\koa-generic-session-mongo\\dist\\store.js:195:33)<br>  at tryCatch (f:\\Users\\dev\\bbs\\node_modules\\babel-runtime\\regenerator\\runtime.js:72:40)<br>  at GeneratorFunctionPrototype.invoke [as _invoke] (f:\\Users\\dev\\bbs\\node_modules\\babel-runtime\\regenerator\\runtime.js:334:22)<br>  at GeneratorFunctionPrototype.prototype.(anonymous <span class=\"hljs-keyword\">function</span>) [as next] (f:\\Users\\dev\\bbs\\node_modules\\babel-runtime\\regenerator\\runtime.js:105:21)<br>  at onFulfilled (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:65:19)<br>  at f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:54:5<br>  at Object.co (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:50:10)<br>  at Object.toPromise (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:118:63)<br>  at next (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:99:29)<br>  at onFulfilled (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:69:7)<br>  at f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:54:5<br>  at Object.co (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:50:10)<br>  at Object.toPromise (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:118:63)<br>  at next (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:99:29)<br>  at onFulfilled (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:69:7)<br>  at f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:54:5<br></code></pre></td></tr></table></figure></p>\n<h2 id=\"2016-06-01\"><a href=\"#2016-06-01\" class=\"headerlink\" title=\"2016-06-01\"></a>2016-06-01</h2><h3 id=\"bugList\"><a href=\"#bugList\" class=\"headerlink\" title=\"bugList\"></a>bugList</h3><ol>\n<li><p><a href=\"#signin-post-bug\">koa-generic-session set error: Cannot read property ‘maxAge’ of undefined</a></p>\n</li>\n<li><p>detail topic/:id</p>\n</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">NotFoundError: Not Found<br>    at Object.module.exports.throw (f:\\Users\\dev\\bbs\\node_modules\\koa\\lib\\context.js:91:23)<br>    at Object.error (f:\\Users\\dev\\bbs\\node_modules\\koa-errorhandler\\index.js:70:73)<br>    at next (native)<br>    at Object.&lt;anonymous&gt; (f:\\Users\\dev\\bbs\\node_modules\\koa-compose\\index.js:28:19)<br>    at next (native)<br>    at onFulfilled (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:65:19)<br>    at process._tickCallback (node.js:369:9)<br></code></pre></td></tr></table></figure>\n\n<p>  ** fix ** : koa-frouter 在Windows中的配置问题<br>  <figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">routerConf: &#123;<br>  <span class=\"hljs-attr\">root</span>: <span class=\"hljs-string\">&#x27;./routes&#x27;</span>,<br>  <span class=\"hljs-attr\">wildcard</span>: <span class=\"hljs-string\">&#x27;_&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure></p>\n<h2 id=\"2016-06-02\"><a href=\"#2016-06-02\" class=\"headerlink\" title=\"2016-06-02\"></a>2016-06-02</h2><h3 id=\"继续-post-signup-时候的-bug\"><a href=\"#继续-post-signup-时候的-bug\" class=\"headerlink\" title=\"继续 post /signup 时候的 bug\"></a>继续 <code>post /signup</code> 时候的 <a href=\"#post-signin-bug\">bug</a></h3><p>暂时解决办法：app.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">app.use(session(&#123;<br>  <span class=\"hljs-attr\">store</span>: <span class=\"hljs-keyword\">new</span> MongoStore(config.mongodb),<br>  <span class=\"hljs-attr\">beforeSave</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">ctx, sess</span>)</span>&#123;<br>    ctx.session.cookie = sess.cookie = &#123;<br>      <span class=\"hljs-attr\">httpOnly</span>: <span class=\"hljs-literal\">true</span>,<br>      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span>,<br>      <span class=\"hljs-attr\">overwrite</span>: <span class=\"hljs-literal\">true</span>,<br>      <span class=\"hljs-attr\">signed</span>: <span class=\"hljs-literal\">true</span>,<br>      <span class=\"hljs-attr\">maxAge</span>: &amp; * <span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">1000</span> <span class=\"hljs-comment\">//one day in ms</span><br>    &#125;;<br>  &#125;<br>&#125;));<br></code></pre></td></tr></table></figure>\n<p>通过<code>koa-generic-session</code> 中的method <code>beforeSave</code> 直接添加cookie 的相关设置</p>\n<h2 id=\"2016-06-03\"><a href=\"#2016-06-03\" class=\"headerlink\" title=\"2016-06-03\"></a>2016-06-03</h2><h3 id=\"1-post-create-bug\"><a href=\"#1-post-create-bug\" class=\"headerlink\" title=\"1. post /create bug:\"></a>1. post /create bug:</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">ValidationError: Topic validation failed<br>    at MongooseError.ValidationError (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\error\\validation.js:22:11)<br>    at model.Document.invalidate (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\document.js:1366:32)<br>    at f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\document.js:1242:17<br>    at validate (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schematype.js:702:7)<br>    at f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schematype.js:733:9<br>    at Array.forEach (native)<br>    at SchemaString.SchemaType.doValidate (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schematype.js:707:19)<br>    at f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\document.js:1240:9<br>    at nextTickCallbackWith0Args (node.js:420:9)<br>    at process._tickCallback (node.js:349:13)<br></code></pre></td></tr></table></figure>\n\n<p>fixed ： post/signin 时候的 session 中添加user 属性 topic schema 定义的user 是对象！ 代码敲错了！</p>\n<p>整个代码可以跑起来了，下面 写 test</p>\n<h3 id=\"测试-test\"><a href=\"#测试-test\" class=\"headerlink\" title=\"测试 test\"></a>测试 test</h3><p>  <code>npm i mocha co-mocha supertest co-supertest --save-dev</code> 依赖的模块</p>\n<p>  test/signup.js 测试注册功能！</p>\n<h3 id=\"Next-Doing\"><a href=\"#Next-Doing\" class=\"headerlink\" title=\"Next Doing\"></a>Next Doing</h3><p>  test/signin.js 登录功能<br>  test/create.js 发帖功能<br>  test/comment.js 回帖功能</p>\n<p>  部署到coding 演示平台上</p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><h2 id=\"系列教程\"><a href=\"#系列教程\" class=\"headerlink\" title=\"系列教程\"></a>系列教程</h2><ol>\n<li><a href=\"https://github.com/koajs/kick-off-koa\">kick-off-koa</a> 【已完成】</li>\n</ol>\n<pre><code>&gt;npm 安装，cli 交互模式学习。应该深入学习 [NodeSchool](http://nodeschool.io/zh-cn/) 下各个课程。\n</code></pre>\n<ol start=\"2\">\n<li><p><a href=\"http://cnodejs.org/topic/563f6e708e90ab7c391e9f71\">基于 koa 开发论坛系统</a> 【进行……】</p>\n</li>\n<li><p><a href=\"https://github.com/nswbmw/N-blog\">使用 Express + MongoDB 搭建多人博客</a></p>\n</li>\n<li><p><a href=\"http://www.nodebeginner.org/index-zh-cn.html\">Node入门</a></p>\n</li>\n<li><p><a href=\"http://www.kancloud.cn/kancloud/create-voting-app/63977\">使用React、Node.js、MongoDB、Socket.IO开发一个角色投票应用</a> <a href=\"https://github.com/papersnake/newdenfaces-es6\">github</a></p>\n</li>\n<li><p><a href=\"https://scotch.io/tutorials/build-a-react-flux-app-with-user-authentication\">Build a React + Flux App with User Authentication</a></p>\n</li>\n<li><p><a href=\"https://github.com/mulgore/kodo\">和我一起实战react</a> 【未完成】</p>\n</li>\n<li><p><a href=\"https://github.com/zoubin/streamify-your-node-program\">对Node.js中 stream模块的学习积累和理解</a></p>\n</li>\n</ol>\n<h2 id=\"入门系列\"><a href=\"#入门系列\" class=\"headerlink\" title=\"入门系列\"></a>入门系列</h2><ol>\n<li><a href=\"https://github.com/guo-yu/koa-guide\">koa 中文文档</a></li>\n<li><a href=\"https://github.com/koajs/koa/wiki\">koa 中间件</a></li>\n<li><a href=\"http://17koa.com/koa-generator-examples/\">一起学koa</a></li>\n<li><a href=\"https://cnodejs.org/topic/56936889c2289f51658f0926\">koa技术分享</a></li>\n</ol>\n<h2 id=\"解读系列\"><a href=\"#解读系列\" class=\"headerlink\" title=\"解读系列\"></a>解读系列</h2><ol>\n<li><a href=\"https://github.com/berwin/Blog/issues/8\">koa</a></li>\n<li><a href=\"http://taobaofed.org/blog/2016/03/18/error-handling-in-koa/\">如何优雅的在 koa 中处理错误</a></li>\n<li><a href=\"https://github.com/zoubin/streamify-your-node-program\">对Node.js中 stream模块的学习积累和理解</a></li>\n<li><a href=\"link\">stream-handbook</a></li>\n</ol>\n<h2 id=\"NPM库\"><a href=\"#NPM库\" class=\"headerlink\" title=\"NPM库\"></a>NPM库</h2><ol>\n<li><a href=\"http://doxmate.cool/node-webot/wechat/index.html\">微信公共平台Node库wechat</a></li>\n</ol>\n","more":"<h1 id=\"kick-off-koa\"><a href=\"#kick-off-koa\" class=\"headerlink\" title=\"kick-off-koa\"></a><a href=\"https://github.com/koajs/kick-off-koa\">kick-off-koa</a></h1><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>  总共11 个 exercise 想每天做一个呢，结果一下午 complete all。总结：</p>\n<ol>\n<li>简单的英文提示，基本能看懂大概意思，按提示的点能够独立完成。很简单的入门课程！</li>\n<li>对于异步理解很不到位，最后一个exercise: authentication 一直报错：<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">should be redirected to <span class=\"hljs-string\">&#x27;/&#x27;</span><br></code></pre></td></tr></table></figure>\n先’this.redirect=”/“‘ 改为 ‘this.redirct(“/“)’，还是一直报错，最后实在没办法，看了下github 中的解决办法，<br>才发现’var body = parse(this)’ 写错了，应该是’var body = yield parse(this)’ 少了yield。现在对于异步的理解还很浅显，感觉是body 调用的时候数据还没parse完。</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"http://www.jscon.cc/koa-action-1/\">[Koa系列-1]简单入门</a></li>\n<li><a href=\"http://www.jscon.cc/koa-action-2/\">[koa系列-2]路由</a></li>\n</ol>\n<blockquote>\n<p>在kick-off-koa基础上，深入的讲解了下, 其中讲到了两张代码模式：<br>    1. Express-style，用法来自于express框架，它能够开启app.get, app.put, app.post, app.delete等功能<br>    2. Middleware-style,此时将 实例化 一个 koa-route 对象，在这个对象中配置路由规则，然后作为一个中间件塞入到app.use方法中。</p>\n</blockquote>\n<h1 id=\"基于-koa-开发论坛系统\"><a href=\"#基于-koa-开发论坛系统\" class=\"headerlink\" title=\"基于 koa 开发论坛系统\"></a><a href=\"http://cnodejs.org/topic/563f6e708e90ab7c391e9f71\">基于 koa 开发论坛系统</a></h1><h2 id=\"2016-05-05\"><a href=\"#2016-05-05\" class=\"headerlink\" title=\"2016-05-05\"></a>2016-05-05</h2><ol>\n<li><a href=\"http://nswbmw.github.io/N-club/1/1.3.html\">co 和 koa</a> 中理解不了thunk函数</li>\n</ol>\n<h2 id=\"2016-05-09\"><a href=\"#2016-05-09\" class=\"headerlink\" title=\"2016-05-09\"></a>2016-05-09</h2><ol>\n<li><a href=\"https://nswbmw.github.io/N-club/2/2.1.html\">模版系统</a></li>\n</ol>\n<pre><code>主要是 [co-ejs](https://github.com/nswbmw/co-ejs) 的各种报错问题，都提交到 [wiki](https://github.com/nswbmw/co-ejs/issues/2) 中，最后通过 项目中的 demo 中的文件找到的 解决方法！\n\n看了下 [co-ejs setting](https://github.com/nswbmw/co-ejs#settings), 有点被自己蠢哭了，答案都在这里啊！\n&gt; root: view root directory.\n  layout: global layout file, default is layout, set false to disable layout.\n  viewExt: view file extension (default html).\n  cache: cache compiled templates (default true).\n  debug: debug flag (default false).\n  locals: global locals, can be function type, this in the function is koa&#39;s ctx.\n  filters: ejs custom filters.\n  open: open sequence (default &lt;%).\n  close: close sequence (default %&gt;).\n</code></pre>\n<h2 id=\"2016-05-10\"><a href=\"#2016-05-10\" class=\"headerlink\" title=\"2016-05-10\"></a>2016-05-10</h2><ol>\n<li><a href=\"http://nswbmw.github.io/N-club/3/README.html\">路由</a></li>\n</ol>\n<pre><code>window下安装koa-frouter一直报错，看到 [koa-frouter](https://github.com/nswbmw/koa-frouter) 官网的issus 有这个问题，原因是:`出现这个问题是因为windows的文件命名不能带有通配符*` 所以 @作者修改了该问题发布了 koa-frouter@0.3.3版本修复这个安装时候的问题\n\n相关 issuse[npm i koa-frouter --save 报错](https://github.com/nswbmw/koa-frouter/issues/4)\n\n话说koa-frouter, co-ejs 都是这个教程的作者写的啊！\n</code></pre>\n<h2 id=\"2016-05-11\"><a href=\"#2016-05-11\" class=\"headerlink\" title=\"2016-05-11\"></a>2016-05-11</h2><h3 id=\"参数验证与错误处理\"><a href=\"#参数验证与错误处理\" class=\"headerlink\" title=\"参数验证与错误处理\"></a><a href=\"http://nswbmw.github.io/N-club/4/4.1.html\">参数验证与错误处理</a></h3><p>  <a href=\"https://github.com/nswbmw/koa-scheme\">koa-scheme</a> 用于输入输出（this.request, this.response) 数据格式的校验，代码编写后要写测试用例，先看后面的</p>\n<p>  <a href=\"https://github.com/nswbmw/koa-errorhandler\">koa-errorhandler</a></p>\n<h3 id=\"缓存和配置\"><a href=\"#缓存和配置\" class=\"headerlink\" title=\"缓存和配置\"></a><a href=\"http://nswbmw.github.io/N-club/5/5.1.html\">缓存和配置</a></h3><p>  <a href=\"https://github.com/nswbmw/koa-router-cache\">koa-router-cache</a> 匹配路径 请求的cache，业务逻辑层之前的缓存</p>\n<p>  <a href=\"https://github.com/nswbmw/co-cache\">co-cache</a> 业务逻辑之后，数据层之前，把写经常用的查询数据，缓存起来！ 需要用到mongodb ，后面测试</p>\n<p>  <a href=\"https://github.com/nswbmw/config-lite\">config-lite</a> 配置文件的区分调用plugin</p>\n<h2 id=\"2016-05-12\"><a href=\"#2016-05-12\" class=\"headerlink\" title=\"2016-05-12\"></a>2016-05-12</h2><h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a><a href=\"http://nswbmw.github.io/N-club/6/README.html\">测试</a></h3><p>  主要用到的npm <a href=\"https://github.com/blakeembrey/co-mocha\">co-mocha</a> 与 <a href=\"https://github.com/avbel/co-supertest\">co-supertest</a></p>\n<p>  describe // 一直写错了，</p>\n<p>  参考了 <a href=\"http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html\">测试框架 Mocha 实例教程</a> 和 <a href=\"https://cnodejs.org/topic/516526766d38277306c7d277\">初识 mocha in NodeJS</a> </p>\n<p>  <a href=\"http://www.cnblogs.com/wade-xu/p/4673460.html\">带你入门带你飞Ⅱ 使用Mocha + Chai + SuperTest测试Restful API in node.js</a></p>\n<blockquote>\n<p>.send(obj) post 的请求的时候，发送请求参数</p>\n</blockquote>\n<p>  Anything you can do with superagent, you can do with supertest - for example multipart file uploads!<br>  测试上传图片的请求<br>  <figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">request(app)<br>.post(<span class=\"hljs-string\">&#x27;/&#x27;</span>)<br>.field(<span class=\"hljs-string\">&#x27;name&#x27;</span>, <span class=\"hljs-string\">&#x27;my awesome avatar&#x27;</span>)<br>.attach(<span class=\"hljs-string\">&#x27;avatar&#x27;</span>, <span class=\"hljs-string\">&#x27;test/fixtures/homeboy.jpg&#x27;</span>)<br>...<br></code></pre></td></tr></table></figure></p>\n<h2 id=\"2016-05-13\"><a href=\"#2016-05-13\" class=\"headerlink\" title=\"2016-05-13\"></a>2016-05-13</h2><p>  继续测试<br>  <figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">it(<span class=\"hljs-string\">&#x27;post /signup&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> *(<span class=\"hljs-params\">done</span>) </span>&#123;<br>  <span class=\"hljs-keyword\">yield</span> agent.post(<span class=\"hljs-string\">&#x27;/signup&#x27;</span>)<br>  .send(param)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>&#123;<br>    <span class=\"hljs-keyword\">return</span> done(err);<br>  &#125;);<br>&#125;);<br><span class=\"hljs-comment\">// 报错信息，感觉是因为 生成器函数中，不能使用 done 参数</span><br><span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> 2000ms exceeded. Ensure the done() callback is being call<br>ed <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">this</span> test.<br></code></pre></td></tr></table></figure></p>\n<h2 id=\"2016-05-16\"><a href=\"#2016-05-16\" class=\"headerlink\" title=\"2016-05-16\"></a>2016-05-16</h2><p>  经过前面的铺垫，开始根据第七章构建一个完整的论坛demo</p>\n<p>  做完7.5 可以开始初步的调试</p>\n<h2 id=\"2016-05-17\"><a href=\"#2016-05-17\" class=\"headerlink\" title=\"2016-05-17\"></a>2016-05-17</h2><h3 id=\"安装mongodb\"><a href=\"#安装mongodb\" class=\"headerlink\" title=\"安装mongodb\"></a>安装mongodb</h3><ol>\n<li><a href=\"http://www.cnblogs.com/linjiqin/p/3192159.html\">Windows7下安装MongoDB</a> </li>\n</ol>\n<p>  吃了路径没有写对的亏，一直启动不成功，以后要注意</p>\n<h3 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h3><ol>\n<li>node app.js 报错:<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">bbs@1.0.0 start f:\\Users\\dev\\bbs<br>node app.js<br><br>f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schema.js:556<br>    throw new TypeError(<span class=\"hljs-string\">&#x27;Undefined type `&#x27;</span> + name + <span class=\"hljs-string\">&#x27;` at `&#x27;</span> + path +<br>    ^<br><br>TypeError: Undefined <span class=\"hljs-built_in\">type</span> `C` at `0`<br>  Did you try nesting Schemas? You can only nest using refs or arrays.<br>    at Function.Schema.interpretAsType (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\l<br>ib\\schema.js:556:11)<br>    at Schema.path (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schema.js:464:29)<br><br>    at Schema.add (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schema.js:348:12)<br>    at new Schema (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schema.js:94:10)<br>    at Schema (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schema.js:67:12)<br>    at Object.&lt;anonymous&gt; (f:\\Users\\dev\\bbs\\models\\comment.js:18:18)<br>    at Module._compile (module.js:409:26)<br>    at Object.Module._extensions..js (module.js:416:10)<br>    at Module.load (module.js:343:32)<br>    at Function.Module._load (module.js:300:12)<br>    at Module.require (module.js:353:17)<br>    at require (internal/module.js:12:17)<br>    at Object.&lt;anonymous&gt; (f:\\Users\\dev\\bbs\\models\\index.js:13:19)<br>    at Module._compile (module.js:409:26)<br>    at Object.Module._extensions..js (module.js:416:10)<br>    at Module.load (module.js:343:32)<br><br>npm ERR! Windows_NT 6.1.7601<br>npm ERR! argv <span class=\"hljs-string\">&quot;C:\\\\Program Files\\\\nodejs\\\\node.exe&quot;</span> <span class=\"hljs-string\">&quot;C:\\\\Users\\\\KevinSu\\\\AppData</span><br><span class=\"hljs-string\">\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js&quot;</span> <span class=\"hljs-string\">&quot;start&quot;</span><br>npm ERR! node v4.4.3<br>npm ERR! npm  v3.8.7<br>npm ERR! code ELIFECYCLE<br>npm ERR! bbs@1.0.0 start: `node app.js`<br>npm ERR! Exit status 1<br>npm ERR!<br>npm ERR! Failed at the bbs@1.0.0 start script <span class=\"hljs-string\">&#x27;node app.js&#x27;</span>.<br>npm ERR! Make sure you have the latest version of node.js and npm installed.<br>npm ERR! If you <span class=\"hljs-keyword\">do</span>, this is most likely a problem with the bbs package,<br>npm ERR! not with npm itself.<br>npm ERR! Tell the author that this fails on your system:<br>npm ERR!     node app.js<br>npm ERR! You can get information on how to open an issue <span class=\"hljs-keyword\">for</span> this project with:<br>npm ERR!     npm bugs bbs<br>npm ERR! Or <span class=\"hljs-keyword\">if</span> that isn<span class=\"hljs-string\">&#x27;t available, you can get their info via:</span><br><span class=\"hljs-string\">npm ERR!     npm owner ls bbs</span><br><span class=\"hljs-string\">npm ERR! There is likely additional logging output above.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">npm ERR! Please include the following file with any support request:</span><br><span class=\"hljs-string\">npm ERR!     f:\\Users\\dev\\bbs\\npm-debug.log</span><br></code></pre></td></tr></table></figure></li>\n</ol>\n<p>  重点错误信息：<br>  <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">TypeError: Undefined <span class=\"hljs-built_in\">type</span> `C` at `0`<br>    Did you try nesting Schemas? You can only nest using refs or arrays.<br>      at Function.Schema.interpretAsType (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\l<br>  ib\\schema.js:556:11)<br></code></pre></td></tr></table></figure><br>  和 <code>at Object.&lt;anonymous&gt; (f:\\Users\\dev\\bbs\\models\\comment.js:18:18)</code>  定位代码错误的位置</p>\n<p>  百度 错误 得到的是 <a href=\"http://stackoverflow.com/questions/27259449/mongoose-error-nesting-schemas\">Mongoose error: nesting Schemas</a> 没看懂，感觉是mongodb 的使用出问题了，直接去 <a href=\"https://github.com/Automattic/mongoose/issues\">mongoose 官网issuse</a></p>\n<p>  发现错误 <code>module.exports = Schema(&#39;Comment&#39;, CommontSchema);</code> 写错了，应该是<code>module.exports = mongoose.model(&#39;Comment&#39;, CommontSchema);</code></p>\n<h2 id=\"2016-05-18\"><a href=\"#2016-05-18\" class=\"headerlink\" title=\"2016-05-18\"></a>2016-05-18</h2><p>  继续昨天的调试</p>\n<ol>\n<li><p><a href=\"http://nswbmw.github.io/N-club/7/README.html\">7.1. 基础项目搭建</a> 中<code>default.js</code> 关于 routerCacheConf 的配置是以前旧版本的koa-router-cache的使用方法，运行会报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">  Error: `key` must be string or generatorFunction!<br>    at module.exports (f:\\Users\\dev\\bbs\\node_modules\\koa-router-cache\\lib\\index.<br>js:13:13)<br>    at Object.&lt;anonymous&gt; (f:\\Users\\dev\\bbs\\app.js:32:9)<br>    at Module._compile (module.js:409:26)<br>    at Object.Module._extensions..js (module.js:416:10)<br>    at Module.load (module.js:343:32)<br>    at Function.Module._load (module.js:300:12)<br>    at Function.Module.runMain (module.js:441:10)<br>    at startup (node.js:139:18)<br>    at node.js:968:3<br></code></pre></td></tr></table></figure>\n<p>新的配置方法请参考 <a href=\"https://github.com/nswbmw/koa-router-cache\">koa-router-cache</a></p>\n</li>\n<li><p>然后就可以启动了 简单的<code>node app.js</code> 看到没报错启动成功了，可以直接 <code> http://localhost:3000</code>页面报错，cli里面不报错，想了半天原因，后面才想去没有index.html 页面，只有signup页面，直接访问 <code>http://localhost:3000/signup</code>就OK了！</p>\n</li>\n<li><p>5章节就OK啦！继续下一节了！</p>\n</li>\n</ol>\n<h2 id=\"2016-05-19\"><a href=\"#2016-05-19\" class=\"headerlink\" title=\"2016-05-19\"></a>2016-05-19</h2><p>  7.8 章节点code 了，next code  7.9 章节</p>\n<h2 id=\"2016-05-20\"><a href=\"#2016-05-20\" class=\"headerlink\" title=\"2016-05-20\"></a>2016-05-20</h2><p>  昨天调试了几个bug，都是代码单词拼写错误或者分号缺少造成的语法错误，<code>node app.js</code>已经可以运行，但是首页打不开，今天继续调试！</p>\n<p>  感觉进步啊，不知道为啥，路由的不起作用，</p>\n<p>  next:</p>\n<pre><code>1. vscode debug 功能学习下\n2. router/topic/_id 不进入\n</code></pre>\n<h2 id=\"2016-05-23\"><a href=\"#2016-05-23\" class=\"headerlink\" title=\"2016-05-23\"></a>2016-05-23</h2><p>  /index 不响应，后台不报错， 浏览器无响应，不知道从何入手啊!</p>\n<p>  翻了下 <a href=\"https://github.com/nswbmw/N-club/issues\">N-club issuse</a>, 感觉是自己没起redis 服务，在 <a href=\"https://github.com/nswbmw/N-club/issues/5#issuecomment-206723697\">co-cache这个模块用到了redis</a> 中作者明确说 <code>需要同时开启mongoDB和redis的</code>, 参考 <a href=\"http://blog.csdn.net/renfufei/article/details/38474435\">Windows下安装并设置Redis</a> 安装开启redis 服务</p>\n<h2 id=\"2016-05-27\"><a href=\"#2016-05-27\" class=\"headerlink\" title=\"2016-05-27\"></a>2016-05-27</h2><ol>\n<li><p><a href=\"http://keenwon.com/1275.html\">在windows上部署使用Redis</a> 设置redis 为系统服务</p>\n</li>\n<li><p>debug 到 <code>userCard.ejs</code> 中 <code>&lt;% var userInfo = yield $User.getUserByName(name) %&gt;</code> 这行出错了！，再具体的不知道bug 的原因</p>\n</li>\n</ol>\n<h2 id=\"2016-05-30\"><a href=\"#2016-05-30\" class=\"headerlink\" title=\"2016-05-30\"></a>2016-05-30</h2><h3 id=\"bug-解决办法\"><a href=\"#bug-解决办法\" class=\"headerlink\" title=\"bug 解决办法\"></a>bug 解决办法</h3><ol>\n<li>学习 vscode debug koa 的方法，看下是否可以定位到具体的bug</li>\n</ol>\n<p>  参考: <a href=\"https://cnodejs.org/topic/572209ea35af8a704195f552\">【视频教程】使用vscode调试koa2-example</a></p>\n<ol start=\"2\">\n<li>学习下一章写测试 test , 关于 ‘$User.getUserByName(name)’ 的测试，看是否能找出bug</li>\n</ol>\n<h3 id=\"post-signin-bug\"><a href=\"#post-signin-bug\" class=\"headerlink\" title=\"post /signin  bug\"></a>post /signin  bug</h3><p>  先开始发现mongodb 中存入的密码是明文，然后登陆的时候是 比对的 是md5的值，发现注册的时候，schema中 md5(password) 的值没有赋值给body, 而是赋值给了this，所以body 中的还是明文的密码</p>\n<p>  然后登陆 post /signin  是报错了！</p>\n<p>  错误提示<br>  <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">koa-generic-session <span class=\"hljs-built_in\">set</span> error: Cannot <span class=\"hljs-built_in\">read</span> property <span class=\"hljs-string\">&#x27;maxAge&#x27;</span> of undefined<br>  at MongoStore.set$ (f:\\Users\\dev\\bbs\\node_modules\\koa-generic-session-mongo\\dist\\store.js:195:33)<br>  at tryCatch (f:\\Users\\dev\\bbs\\node_modules\\babel-runtime\\regenerator\\runtime.js:72:40)<br>  at GeneratorFunctionPrototype.invoke [as _invoke] (f:\\Users\\dev\\bbs\\node_modules\\babel-runtime\\regenerator\\runtime.js:334:22)<br>  at GeneratorFunctionPrototype.prototype.(anonymous <span class=\"hljs-keyword\">function</span>) [as next] (f:\\Users\\dev\\bbs\\node_modules\\babel-runtime\\regenerator\\runtime.js:105:21)<br>  at onFulfilled (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:65:19)<br>  at f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:54:5<br>  at Object.co (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:50:10)<br>  at Object.toPromise (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:118:63)<br>  at next (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:99:29)<br>  at onFulfilled (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:69:7)<br>  at f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:54:5<br>  at Object.co (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:50:10)<br>  at Object.toPromise (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:118:63)<br>  at next (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:99:29)<br>  at onFulfilled (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:69:7)<br>  at f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:54:5<br></code></pre></td></tr></table></figure></p>\n<h2 id=\"2016-06-01\"><a href=\"#2016-06-01\" class=\"headerlink\" title=\"2016-06-01\"></a>2016-06-01</h2><h3 id=\"bugList\"><a href=\"#bugList\" class=\"headerlink\" title=\"bugList\"></a>bugList</h3><ol>\n<li><p><a href=\"#signin-post-bug\">koa-generic-session set error: Cannot read property ‘maxAge’ of undefined</a></p>\n</li>\n<li><p>detail topic/:id</p>\n</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">NotFoundError: Not Found<br>    at Object.module.exports.throw (f:\\Users\\dev\\bbs\\node_modules\\koa\\lib\\context.js:91:23)<br>    at Object.error (f:\\Users\\dev\\bbs\\node_modules\\koa-errorhandler\\index.js:70:73)<br>    at next (native)<br>    at Object.&lt;anonymous&gt; (f:\\Users\\dev\\bbs\\node_modules\\koa-compose\\index.js:28:19)<br>    at next (native)<br>    at onFulfilled (f:\\Users\\dev\\bbs\\node_modules\\co\\index.js:65:19)<br>    at process._tickCallback (node.js:369:9)<br></code></pre></td></tr></table></figure>\n\n<p>  ** fix ** : koa-frouter 在Windows中的配置问题<br>  <figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">routerConf: &#123;<br>  <span class=\"hljs-attr\">root</span>: <span class=\"hljs-string\">&#x27;./routes&#x27;</span>,<br>  <span class=\"hljs-attr\">wildcard</span>: <span class=\"hljs-string\">&#x27;_&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure></p>\n<h2 id=\"2016-06-02\"><a href=\"#2016-06-02\" class=\"headerlink\" title=\"2016-06-02\"></a>2016-06-02</h2><h3 id=\"继续-post-signup-时候的-bug\"><a href=\"#继续-post-signup-时候的-bug\" class=\"headerlink\" title=\"继续 post /signup 时候的 bug\"></a>继续 <code>post /signup</code> 时候的 <a href=\"#post-signin-bug\">bug</a></h3><p>暂时解决办法：app.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">app.use(session(&#123;<br>  <span class=\"hljs-attr\">store</span>: <span class=\"hljs-keyword\">new</span> MongoStore(config.mongodb),<br>  <span class=\"hljs-attr\">beforeSave</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">ctx, sess</span>)</span>&#123;<br>    ctx.session.cookie = sess.cookie = &#123;<br>      <span class=\"hljs-attr\">httpOnly</span>: <span class=\"hljs-literal\">true</span>,<br>      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span>,<br>      <span class=\"hljs-attr\">overwrite</span>: <span class=\"hljs-literal\">true</span>,<br>      <span class=\"hljs-attr\">signed</span>: <span class=\"hljs-literal\">true</span>,<br>      <span class=\"hljs-attr\">maxAge</span>: &amp; * <span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">1000</span> <span class=\"hljs-comment\">//one day in ms</span><br>    &#125;;<br>  &#125;<br>&#125;));<br></code></pre></td></tr></table></figure>\n<p>通过<code>koa-generic-session</code> 中的method <code>beforeSave</code> 直接添加cookie 的相关设置</p>\n<h2 id=\"2016-06-03\"><a href=\"#2016-06-03\" class=\"headerlink\" title=\"2016-06-03\"></a>2016-06-03</h2><h3 id=\"1-post-create-bug\"><a href=\"#1-post-create-bug\" class=\"headerlink\" title=\"1. post /create bug:\"></a>1. post /create bug:</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">ValidationError: Topic validation failed<br>    at MongooseError.ValidationError (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\error\\validation.js:22:11)<br>    at model.Document.invalidate (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\document.js:1366:32)<br>    at f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\document.js:1242:17<br>    at validate (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schematype.js:702:7)<br>    at f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schematype.js:733:9<br>    at Array.forEach (native)<br>    at SchemaString.SchemaType.doValidate (f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\schematype.js:707:19)<br>    at f:\\Users\\dev\\bbs\\node_modules\\mongoose\\lib\\document.js:1240:9<br>    at nextTickCallbackWith0Args (node.js:420:9)<br>    at process._tickCallback (node.js:349:13)<br></code></pre></td></tr></table></figure>\n\n<p>fixed ： post/signin 时候的 session 中添加user 属性 topic schema 定义的user 是对象！ 代码敲错了！</p>\n<p>整个代码可以跑起来了，下面 写 test</p>\n<h3 id=\"测试-test\"><a href=\"#测试-test\" class=\"headerlink\" title=\"测试 test\"></a>测试 test</h3><p>  <code>npm i mocha co-mocha supertest co-supertest --save-dev</code> 依赖的模块</p>\n<p>  test/signup.js 测试注册功能！</p>\n<h3 id=\"Next-Doing\"><a href=\"#Next-Doing\" class=\"headerlink\" title=\"Next Doing\"></a>Next Doing</h3><p>  test/signin.js 登录功能<br>  test/create.js 发帖功能<br>  test/comment.js 回帖功能</p>\n<p>  部署到coding 演示平台上</p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><h2 id=\"系列教程\"><a href=\"#系列教程\" class=\"headerlink\" title=\"系列教程\"></a>系列教程</h2><ol>\n<li><a href=\"https://github.com/koajs/kick-off-koa\">kick-off-koa</a> 【已完成】</li>\n</ol>\n<pre><code>&gt;npm 安装，cli 交互模式学习。应该深入学习 [NodeSchool](http://nodeschool.io/zh-cn/) 下各个课程。\n</code></pre>\n<ol start=\"2\">\n<li><p><a href=\"http://cnodejs.org/topic/563f6e708e90ab7c391e9f71\">基于 koa 开发论坛系统</a> 【进行……】</p>\n</li>\n<li><p><a href=\"https://github.com/nswbmw/N-blog\">使用 Express + MongoDB 搭建多人博客</a></p>\n</li>\n<li><p><a href=\"http://www.nodebeginner.org/index-zh-cn.html\">Node入门</a></p>\n</li>\n<li><p><a href=\"http://www.kancloud.cn/kancloud/create-voting-app/63977\">使用React、Node.js、MongoDB、Socket.IO开发一个角色投票应用</a> <a href=\"https://github.com/papersnake/newdenfaces-es6\">github</a></p>\n</li>\n<li><p><a href=\"https://scotch.io/tutorials/build-a-react-flux-app-with-user-authentication\">Build a React + Flux App with User Authentication</a></p>\n</li>\n<li><p><a href=\"https://github.com/mulgore/kodo\">和我一起实战react</a> 【未完成】</p>\n</li>\n<li><p><a href=\"https://github.com/zoubin/streamify-your-node-program\">对Node.js中 stream模块的学习积累和理解</a></p>\n</li>\n</ol>\n<h2 id=\"入门系列\"><a href=\"#入门系列\" class=\"headerlink\" title=\"入门系列\"></a>入门系列</h2><ol>\n<li><a href=\"https://github.com/guo-yu/koa-guide\">koa 中文文档</a></li>\n<li><a href=\"https://github.com/koajs/koa/wiki\">koa 中间件</a></li>\n<li><a href=\"http://17koa.com/koa-generator-examples/\">一起学koa</a></li>\n<li><a href=\"https://cnodejs.org/topic/56936889c2289f51658f0926\">koa技术分享</a></li>\n</ol>\n<h2 id=\"解读系列\"><a href=\"#解读系列\" class=\"headerlink\" title=\"解读系列\"></a>解读系列</h2><ol>\n<li><a href=\"https://github.com/berwin/Blog/issues/8\">koa</a></li>\n<li><a href=\"http://taobaofed.org/blog/2016/03/18/error-handling-in-koa/\">如何优雅的在 koa 中处理错误</a></li>\n<li><a href=\"https://github.com/zoubin/streamify-your-node-program\">对Node.js中 stream模块的学习积累和理解</a></li>\n<li><a href=\"link\">stream-handbook</a></li>\n</ol>\n<h2 id=\"NPM库\"><a href=\"#NPM库\" class=\"headerlink\" title=\"NPM库\"></a>NPM库</h2><ol>\n<li><a href=\"http://doxmate.cool/node-webot/wechat/index.html\">微信公共平台Node库wechat</a></li>\n</ol>","categories":[{"name":"Nodejs","path":"api/categories/Nodejs.json"}],"tags":[{"name":"Nodejs","path":"api/tags/Nodejs.json"},{"name":"koa","path":"api/tags/koa.json"}]}