{"title":"readList","slug":"readList-1","date":"2016-04-05T06:39:43.000Z","updated":"2022-01-20T04:12:09.027Z","comments":true,"path":"api/articles/readList-1.json","excerpt":"平时好文章 搜集","covers":null,"content":"<p>平时好文章 搜集</p>\n<span id=\"more\"></span>\n\n<h1 id=\"这里作为读过的网络文章的链接汇总吧\"><a href=\"#这里作为读过的网络文章的链接汇总吧\" class=\"headerlink\" title=\"这里作为读过的网络文章的链接汇总吧\"></a>这里作为读过的网络文章的链接汇总吧</h1><h2 id=\"F2E\"><a href=\"#F2E\" class=\"headerlink\" title=\"F2E\"></a>F2E</h2><ol>\n<li><a href=\"http://blog.csdn.net/kongjiea/article/details/38614695\">css3用AnimationEnd判断动画是否完成， css3在动画完成后执行事件</a></li>\n</ol>\n<h3 id=\"2016-04-05\"><a href=\"#2016-04-05\" class=\"headerlink\" title=\"2016-04-05\"></a>2016-04-05</h3><ol>\n<li><a href=\"http://www.ruanyifeng.com/blog/2013/06/emmet_and_haml.html\">HTML代码简写法：Emmet和Haml</a></li>\n</ol>\n<pre><code>&gt;Emmet支持的简写规则:\n  <figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><code class=\"hljs html\">E 代表HTML标签。<br>E#id 代表id属性。<br>E.class 代表class属性。<br>E[attr=foo] 代表某一个特定属性。<br>E&#123;foo&#125; 代表标签包含的内容是foo。<br>E&gt;N 代表N是E的子元素。<br>E+N 代表N是E的同级元素。<br>E^N 代表N是E的上级元素。<br></code></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"2\">\n<li><a href=\"http://emmet.evget.com/\">Emmet快捷方式查询</a></li>\n</ol>\n<h3 id=\"2016-04-12\"><a href=\"#2016-04-12\" class=\"headerlink\" title=\"2016-04-12\"></a>2016-04-12</h3><ol>\n<li><a href=\"http://www.cnblogs.com/demix/archive/2009/11/28/1612715.html\">@font-face与性能</a></li>\n<li><a href=\"http://isux.tencent.com/icon-font.html\">图标字体化浅谈</a></li>\n</ol>\n<h3 id=\"2016-04-14\"><a href=\"#2016-04-14\" class=\"headerlink\" title=\"2016-04-14\"></a>2016-04-14</h3><ol>\n<li><a href=\"http://www.blogjava.net/jidebingfeng/articles/406171.html\">javascript将base64编码的图片数据转换为file并提交</a><blockquote>\n<p>测试chrome 浏览器，和iOS9.3 中可以（微信）【解决了canvas.toBlob()不支持问题】, 代码如下：</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">convertBase64UrlToBlob: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">urlData, type</span>)</span>&#123;<br>    contentType = type || <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>    <span class=\"hljs-keyword\">var</span> bytes=<span class=\"hljs-built_in\">window</span>.atob(urlData.split(<span class=\"hljs-string\">&#x27;,&#x27;</span>)[<span class=\"hljs-number\">1</span>]);        <span class=\"hljs-comment\">//去掉url的头，并转换为byte</span><br>    <span class=\"hljs-comment\">//处理异常,将ascii码小于0的转换为大于0</span><br>    <span class=\"hljs-keyword\">var</span> ab = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">ArrayBuffer</span>(bytes.length);<br>    <span class=\"hljs-keyword\">var</span> ia = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Uint8Array</span>(ab);<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; bytes.length; i++) &#123;<br>        ia[i] = bytes.charCodeAt(i);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Blob( [ab] , &#123;<span class=\"hljs-attr\">type</span> : contentType&#125;);<br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><a href=\"http://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript\">Creating a Blob from a base64 string in JavaScript</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">b64toBlob</span>(<span class=\"hljs-params\">b64Data, contentType, sliceSize</span>) </span>&#123;<br>  contentType = contentType || <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>  sliceSize = sliceSize || <span class=\"hljs-number\">512</span>;<br><br>  <span class=\"hljs-keyword\">var</span> byteCharacters = atob(b64Data);<br>  <span class=\"hljs-keyword\">var</span> byteArrays = [];<br><br>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> offset = <span class=\"hljs-number\">0</span>; offset &lt; byteCharacters.length; offset += sliceSize) &#123;<br>    <span class=\"hljs-keyword\">var</span> slice = byteCharacters.slice(offset, offset + sliceSize);<br><br>    <span class=\"hljs-keyword\">var</span> byteNumbers = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>(slice.length);<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; slice.length; i++) &#123;<br>      byteNumbers[i] = slice.charCodeAt(i);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">var</span> byteArray = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Uint8Array</span>(byteNumbers);<br><br>    byteArrays.push(byteArray);<br>  &#125;<br><br>  <span class=\"hljs-keyword\">var</span> blob = <span class=\"hljs-keyword\">new</span> Blob(byteArrays, &#123;<span class=\"hljs-attr\">type</span>: contentType&#125;);<br>  <span class=\"hljs-keyword\">return</span> blob;<br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>结合第一段代码可以发现，window.atob(b64Data.split(‘,’)[1]), 要去掉url的头，而且代码看起来更健壮！</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"2016-04-16\"><a href=\"#2016-04-16\" class=\"headerlink\" title=\"2016-04-16\"></a>2016-04-16</h3><ol>\n<li><a href=\"http://www.jianshu.com/p/3cb5c6f2421c\">如何优雅地使用Sublime Text3</a>【很全的一篇使用指南】</li>\n</ol>\n<pre><code>1. _\n</code></pre>\n<p>_<br> build System _<br>_<br> 【可以自己构建node 一键运行】<br>      &gt; 在sublime text中依次打开<code>Tools -&gt; Build System -&gt; New Build System... </code>粘贴以下代码后保存<code>(如Node.sublime-build)</code>, 然后把Build System设成Automatic<br>      <figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">&#123; <span class=\"hljs-string\">&quot;cmd&quot;</span>: [<span class=\"hljs-string\">&quot;node&quot;</span>, <span class=\"hljs-string\">&quot;--use-strict&quot;</span>, <span class=\"hljs-string\">&quot;--harmony&quot;</span>, <span class=\"hljs-string\">&quot;$file&quot;</span>], <span class=\"hljs-string\">&quot;selector&quot;</span>: <span class=\"hljs-string\">&quot;source.js&quot;</span>&#125;<br><br></code></pre></td></tr></table></figure><br>    2. _<br>_<br> WakaTime – 记录你的Code时间 _<br>_</p>\n<pre><code>  &gt; WakaTime可以做到精确地统计到你花在某个项目上的时间;WakaTime针对不同的IDE，拥有不同的插件，在Sublime上安装着插件，就能统计到我使用Sublime进行的所有项目的行为。可以高效管理和知晓自己code时间\n\n  sublime &amp; vsCode 都安装了WakaTime 插件了！\n\n3. _\n</code></pre>\n<p>_<br> 定制属于自己的快捷键 _<br>_</p>\n<pre><code>  &gt; 设置快捷键。在SublimeText里，打开Preferences -&gt; Key Bindings - User，设置的快捷键。\n\n  这样结合1 就可以 快捷运行当前的node 文件了\n\n4. _\n</code></pre>\n<p>_<br> <a href=\"http://www.bluesdream.com/blog/write-your-own-sublime-text2-plug.html\">编写自己的Sublime Text2 插件</a> _<br>_<br> 【很简单的实例】</p>\n<p>  Sublime 是迄今为止用的使用的最好用的编辑器了，大部分时间工作时间都在使用，以前了解过其相关的 snipper, hotkey机制，实现了一些自己的定制，现在了解了build System , new Plugin 机制可以更深入的定制了，’一直想写个直接输入当前时间的 plugin’。</p>\n<p>  _<br>_<br> 刚发现了编辑Markdown 文件时sublime 中Ctrl + P输入 @ 会出现目录，真是神器啊！ _<br>_</p>\n<ol start=\"2\">\n<li><a href=\"https://luolei.org/track-your-time/\">时间都去哪了?用RescueTime和WakaTime来记录你的时间</a></li>\n</ol>\n<pre><code>从上面文章中看到了的，感觉对自己很有用，最近拖延症晚期了，改变下，正使用Pomotodo 改正中……\n</code></pre>\n<h3 id=\"2016-04-18\"><a href=\"#2016-04-18\" class=\"headerlink\" title=\"2016-04-18\"></a>2016-04-18</h3><ol>\n<li><a href=\"http://www.tuicool.com/articles/3EVz2qB\"> React Native 开发指南</a> 【Facebook官方出品，中译】</li>\n</ol>\n<h3 id=\"2016-04-19-15-12\"><a href=\"#2016-04-19-15-12\" class=\"headerlink\" title=\"2016-04-19 15:12\"></a>2016-04-19 15:12</h3><ol>\n<li><a href=\"https://mingyili.github.io/2015/11/05.html#pagewrap\">移动端底部input 样式布局修复方案</a></li>\n</ol>\n<pre><code>修复了input 父类元素 postion: abusolut or fixed 软键盘弹出覆盖 input 元素的问题\n\n通过 transform: translate3D(0,y,0) 整体向上滚动键盘的高度实现\n\n主要通过window resize() 事件监听触发的键盘弹起事件，这个事件在iOS 中无法监听，只有通过android 可以监听到，而且iOS下没有问题，所以只处理 Android 的resize 的事件就可以了\n\n知乎的相关讨论 [移动web页面，input获取焦点弹出系统虚拟键盘时，挡住input，求解决方案？](https://www.zhihu.com/question/32746176?sort=created)\n</code></pre>\n<ol start=\"2\">\n<li>15:25</li>\n</ol>\n<pre><code>Sublime Date plugin: F5 输入date+hour; Shift + F5 输入hour\n</code></pre>\n<h3 id=\"2016-04-20\"><a href=\"#2016-04-20\" class=\"headerlink\" title=\"2016-04-20\"></a>2016-04-20</h3><ol>\n<li><a href=\"http://www.appelsiini.net/projects/lazyload\">Lazy Load Plugin for jQuery</a> 【图片懒加载】</li>\n</ol>\n<h3 id=\"2016-04-22-11-20\"><a href=\"#2016-04-22-11-20\" class=\"headerlink\" title=\"2016-04-22 11:20\"></a>2016-04-22 11:20</h3><ol>\n<li>Dove Wedding 婚礼空间 预览模式下崩溃问题</li>\n</ol>\n<p>  昨天确定的swipe 初始化的时候会崩溃</p>\n","more":"<h1 id=\"这里作为读过的网络文章的链接汇总吧\"><a href=\"#这里作为读过的网络文章的链接汇总吧\" class=\"headerlink\" title=\"这里作为读过的网络文章的链接汇总吧\"></a>这里作为读过的网络文章的链接汇总吧</h1><h2 id=\"F2E\"><a href=\"#F2E\" class=\"headerlink\" title=\"F2E\"></a>F2E</h2><ol>\n<li><a href=\"http://blog.csdn.net/kongjiea/article/details/38614695\">css3用AnimationEnd判断动画是否完成， css3在动画完成后执行事件</a></li>\n</ol>\n<h3 id=\"2016-04-05\"><a href=\"#2016-04-05\" class=\"headerlink\" title=\"2016-04-05\"></a>2016-04-05</h3><ol>\n<li><a href=\"http://www.ruanyifeng.com/blog/2013/06/emmet_and_haml.html\">HTML代码简写法：Emmet和Haml</a></li>\n</ol>\n<pre><code>&gt;Emmet支持的简写规则:\n  <figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><code class=\"hljs html\">E 代表HTML标签。<br>E#id 代表id属性。<br>E.class 代表class属性。<br>E[attr=foo] 代表某一个特定属性。<br>E&#123;foo&#125; 代表标签包含的内容是foo。<br>E&gt;N 代表N是E的子元素。<br>E+N 代表N是E的同级元素。<br>E^N 代表N是E的上级元素。<br></code></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"2\">\n<li><a href=\"http://emmet.evget.com/\">Emmet快捷方式查询</a></li>\n</ol>\n<h3 id=\"2016-04-12\"><a href=\"#2016-04-12\" class=\"headerlink\" title=\"2016-04-12\"></a>2016-04-12</h3><ol>\n<li><a href=\"http://www.cnblogs.com/demix/archive/2009/11/28/1612715.html\">@font-face与性能</a></li>\n<li><a href=\"http://isux.tencent.com/icon-font.html\">图标字体化浅谈</a></li>\n</ol>\n<h3 id=\"2016-04-14\"><a href=\"#2016-04-14\" class=\"headerlink\" title=\"2016-04-14\"></a>2016-04-14</h3><ol>\n<li><a href=\"http://www.blogjava.net/jidebingfeng/articles/406171.html\">javascript将base64编码的图片数据转换为file并提交</a><blockquote>\n<p>测试chrome 浏览器，和iOS9.3 中可以（微信）【解决了canvas.toBlob()不支持问题】, 代码如下：</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">convertBase64UrlToBlob: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">urlData, type</span>)</span>&#123;<br>    contentType = type || <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>    <span class=\"hljs-keyword\">var</span> bytes=<span class=\"hljs-built_in\">window</span>.atob(urlData.split(<span class=\"hljs-string\">&#x27;,&#x27;</span>)[<span class=\"hljs-number\">1</span>]);        <span class=\"hljs-comment\">//去掉url的头，并转换为byte</span><br>    <span class=\"hljs-comment\">//处理异常,将ascii码小于0的转换为大于0</span><br>    <span class=\"hljs-keyword\">var</span> ab = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">ArrayBuffer</span>(bytes.length);<br>    <span class=\"hljs-keyword\">var</span> ia = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Uint8Array</span>(ab);<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; bytes.length; i++) &#123;<br>        ia[i] = bytes.charCodeAt(i);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Blob( [ab] , &#123;<span class=\"hljs-attr\">type</span> : contentType&#125;);<br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><a href=\"http://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript\">Creating a Blob from a base64 string in JavaScript</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">b64toBlob</span>(<span class=\"hljs-params\">b64Data, contentType, sliceSize</span>) </span>&#123;<br>  contentType = contentType || <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>  sliceSize = sliceSize || <span class=\"hljs-number\">512</span>;<br><br>  <span class=\"hljs-keyword\">var</span> byteCharacters = atob(b64Data);<br>  <span class=\"hljs-keyword\">var</span> byteArrays = [];<br><br>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> offset = <span class=\"hljs-number\">0</span>; offset &lt; byteCharacters.length; offset += sliceSize) &#123;<br>    <span class=\"hljs-keyword\">var</span> slice = byteCharacters.slice(offset, offset + sliceSize);<br><br>    <span class=\"hljs-keyword\">var</span> byteNumbers = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>(slice.length);<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; slice.length; i++) &#123;<br>      byteNumbers[i] = slice.charCodeAt(i);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">var</span> byteArray = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Uint8Array</span>(byteNumbers);<br><br>    byteArrays.push(byteArray);<br>  &#125;<br><br>  <span class=\"hljs-keyword\">var</span> blob = <span class=\"hljs-keyword\">new</span> Blob(byteArrays, &#123;<span class=\"hljs-attr\">type</span>: contentType&#125;);<br>  <span class=\"hljs-keyword\">return</span> blob;<br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>结合第一段代码可以发现，window.atob(b64Data.split(‘,’)[1]), 要去掉url的头，而且代码看起来更健壮！</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"2016-04-16\"><a href=\"#2016-04-16\" class=\"headerlink\" title=\"2016-04-16\"></a>2016-04-16</h3><ol>\n<li><a href=\"http://www.jianshu.com/p/3cb5c6f2421c\">如何优雅地使用Sublime Text3</a>【很全的一篇使用指南】</li>\n</ol>\n<pre><code>1. _\n</code></pre>\n<p>_<br> build System _<br>_<br> 【可以自己构建node 一键运行】<br>      &gt; 在sublime text中依次打开<code>Tools -&gt; Build System -&gt; New Build System... </code>粘贴以下代码后保存<code>(如Node.sublime-build)</code>, 然后把Build System设成Automatic<br>      <figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs javascript\">&#123; <span class=\"hljs-string\">&quot;cmd&quot;</span>: [<span class=\"hljs-string\">&quot;node&quot;</span>, <span class=\"hljs-string\">&quot;--use-strict&quot;</span>, <span class=\"hljs-string\">&quot;--harmony&quot;</span>, <span class=\"hljs-string\">&quot;$file&quot;</span>], <span class=\"hljs-string\">&quot;selector&quot;</span>: <span class=\"hljs-string\">&quot;source.js&quot;</span>&#125;<br><br></code></pre></td></tr></table></figure><br>    2. _<br>_<br> WakaTime – 记录你的Code时间 _<br>_</p>\n<pre><code>  &gt; WakaTime可以做到精确地统计到你花在某个项目上的时间;WakaTime针对不同的IDE，拥有不同的插件，在Sublime上安装着插件，就能统计到我使用Sublime进行的所有项目的行为。可以高效管理和知晓自己code时间\n\n  sublime &amp; vsCode 都安装了WakaTime 插件了！\n\n3. _\n</code></pre>\n<p>_<br> 定制属于自己的快捷键 _<br>_</p>\n<pre><code>  &gt; 设置快捷键。在SublimeText里，打开Preferences -&gt; Key Bindings - User，设置的快捷键。\n\n  这样结合1 就可以 快捷运行当前的node 文件了\n\n4. _\n</code></pre>\n<p>_<br> <a href=\"http://www.bluesdream.com/blog/write-your-own-sublime-text2-plug.html\">编写自己的Sublime Text2 插件</a> _<br>_<br> 【很简单的实例】</p>\n<p>  Sublime 是迄今为止用的使用的最好用的编辑器了，大部分时间工作时间都在使用，以前了解过其相关的 snipper, hotkey机制，实现了一些自己的定制，现在了解了build System , new Plugin 机制可以更深入的定制了，’一直想写个直接输入当前时间的 plugin’。</p>\n<p>  _<br>_<br> 刚发现了编辑Markdown 文件时sublime 中Ctrl + P输入 @ 会出现目录，真是神器啊！ _<br>_</p>\n<ol start=\"2\">\n<li><a href=\"https://luolei.org/track-your-time/\">时间都去哪了?用RescueTime和WakaTime来记录你的时间</a></li>\n</ol>\n<pre><code>从上面文章中看到了的，感觉对自己很有用，最近拖延症晚期了，改变下，正使用Pomotodo 改正中……\n</code></pre>\n<h3 id=\"2016-04-18\"><a href=\"#2016-04-18\" class=\"headerlink\" title=\"2016-04-18\"></a>2016-04-18</h3><ol>\n<li><a href=\"http://www.tuicool.com/articles/3EVz2qB\"> React Native 开发指南</a> 【Facebook官方出品，中译】</li>\n</ol>\n<h3 id=\"2016-04-19-15-12\"><a href=\"#2016-04-19-15-12\" class=\"headerlink\" title=\"2016-04-19 15:12\"></a>2016-04-19 15:12</h3><ol>\n<li><a href=\"https://mingyili.github.io/2015/11/05.html#pagewrap\">移动端底部input 样式布局修复方案</a></li>\n</ol>\n<pre><code>修复了input 父类元素 postion: abusolut or fixed 软键盘弹出覆盖 input 元素的问题\n\n通过 transform: translate3D(0,y,0) 整体向上滚动键盘的高度实现\n\n主要通过window resize() 事件监听触发的键盘弹起事件，这个事件在iOS 中无法监听，只有通过android 可以监听到，而且iOS下没有问题，所以只处理 Android 的resize 的事件就可以了\n\n知乎的相关讨论 [移动web页面，input获取焦点弹出系统虚拟键盘时，挡住input，求解决方案？](https://www.zhihu.com/question/32746176?sort=created)\n</code></pre>\n<ol start=\"2\">\n<li>15:25</li>\n</ol>\n<pre><code>Sublime Date plugin: F5 输入date+hour; Shift + F5 输入hour\n</code></pre>\n<h3 id=\"2016-04-20\"><a href=\"#2016-04-20\" class=\"headerlink\" title=\"2016-04-20\"></a>2016-04-20</h3><ol>\n<li><a href=\"http://www.appelsiini.net/projects/lazyload\">Lazy Load Plugin for jQuery</a> 【图片懒加载】</li>\n</ol>\n<h3 id=\"2016-04-22-11-20\"><a href=\"#2016-04-22-11-20\" class=\"headerlink\" title=\"2016-04-22 11:20\"></a>2016-04-22 11:20</h3><ol>\n<li>Dove Wedding 婚礼空间 预览模式下崩溃问题</li>\n</ol>\n<p>  昨天确定的swipe 初始化的时候会崩溃</p>","categories":[{"name":"ReadList","path":"api/categories/ReadList.json"}],"tags":[{"name":"F2E","path":"api/tags/F2E.json"},{"name":"前端","path":"api/tags/前端.json"},{"name":"笔记","path":"api/tags/笔记.json"}]}