{"title":"hello-hexo","slug":"hello-hexo","date":"2016-02-17T10:03:20.000Z","updated":"2022-01-20T04:12:09.026Z","comments":true,"path":"api/articles/hello-hexo.json","excerpt":"一直想弄个自己的博客 记录下自己的技术方面的点点滴滴新年第一天上班，正好看到 hexo 可以借助 github.com 构建自己的静态博客，正好可以折腾下！","covers":null,"content":"<p>一直想弄个自己的博客 记录下自己的技术方面的点点滴滴</p>\n<p>新年第一天上班，正好看到 hexo 可以借助 github.com 构建自己的静态博客，正好可以折腾下！</p>\n<span id=\"more\"></span>\n\n<h2 id=\"基本的安装\"><a href=\"#基本的安装\" class=\"headerlink\" title=\"基本的安装\"></a>基本的安装</h2><p>(懒癌发作!)都是做开发的不一步步讲解了，直接上参考链接吧：</p>\n<ol>\n<li><a href=\"http://yangjian.me/workspace/building-blog-with-hexo/\">使用 hexo 搭建博客</a> <strong>无效了无奈</strong></li>\n</ol>\n<h3 id=\"本地调试地址端口无效\"><a href=\"#本地调试地址端口无效\" class=\"headerlink\" title=\"本地调试地址端口无效\"></a>本地调试地址端口无效</h3><h4 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><p>搜索参考网上的说是端口占用了 把 ip 地址改为常用的 127.0.0.1:4000 就 OK 了<br>修改方法：直接找到<code>node_modules/ hexo-serve/index.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs Javascript\">hexo.config.server = assign(&#123;<br>  <span class=\"hljs-attr\">log</span>: <span class=\"hljs-literal\">false</span>,<br>  <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-string\">&#x27;127.0.0.1&#x27;</span><br>&#125;, hexo.config.server);<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2016-02-22-更新\"><a href=\"#2016-02-22-更新\" class=\"headerlink\" title=\"2016.02.22 更新\"></a>2016.02.22 更新</h4><p>参考了 <a href=\"https://github.com/hexojs/hexo-server\">hexo-server</a>, 本地服务的 IP ，和 port 可以在启动参数中配置的</p>\n<p>还可以直接写到站点的 配置文件中_config.yml</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs Javascript\">server:<br>  port: <span class=\"hljs-number\">4000</span><br>  <span class=\"hljs-attr\">log</span>: <span class=\"hljs-literal\">false</span><br>  <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><br>  <span class=\"hljs-attr\">compress</span>: <span class=\"hljs-literal\">false</span><br>  <span class=\"hljs-attr\">header</span>: <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"主题安装-themes\"><a href=\"#主题安装-themes\" class=\"headerlink\" title=\"主题安装 themes\"></a>主题安装 themes</h3><p>喜欢的主题 <a href=\"https://github.com/iissnan/hexo-theme-next\">hexo-theme-next</a> ，使用文档很详细：<a href=\"http://theme-next.iissnan.com/\">文档地址</a> ，不废话了！</p>\n<p>喜欢的主题列表</p>\n<ol>\n<li><a href=\"https://github.com/heroicyang/hexo-theme-modernist\">hexo-theme-modernist</a></li>\n<li><a href=\"https://github.com/iissnan/hexo-theme-next\">hexo-theme-next</a></li>\n</ol>\n<h4 id=\"评论\"><a href=\"#评论\" class=\"headerlink\" title=\"评论\"></a>评论</h4><p><a href=\"http://duoshuo.com/\">多说</a> 服务停掉了，想法使用 gittalk 或者 gitment</p>\n<h4 id=\"统计\"><a href=\"#统计\" class=\"headerlink\" title=\"统计\"></a>统计</h4><p><a href=\"http://sitecenter.baidu.com/sc-web/\">百度统计</a> ，现在换掉了，改成了 Google analyst</p>\n<h4 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h4><p><a href=\"https://swiftype.com/\">Swiftype</a> 并没使用上</p>\n<h4 id=\"文章摘要\"><a href=\"#文章摘要\" class=\"headerlink\" title=\"文章摘要\"></a>文章摘要</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs Javascript\">以上是摘要<br>&lt;!--more--&gt;<br>以下是全文<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"部署上线\"><a href=\"#部署上线\" class=\"headerlink\" title=\"部署上线\"></a>部署上线</h2><h3 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h3><p>上面都是配置问题，本地没有问题的，终究要部署到<code>github.com</code> 上的，那么问题来了</p>\n<p>部署上去 无法访问，我是在 git 的根目录下有新建了个 blog 目录，因为原来的 git 下有东西了</p>\n<p>怀疑是自己的 git root 下面已经有东西了，在子目录 blog 下影响的，把 git remote 改为新的地址：<code>git@github.com:sumaolin/hexo.git</code></p>\n<p>可是 hexo deploy 还是报错</p>\n<p><a href=\"https://hexo.io/zh-cn/docs/deployment.html\">查官方文档</a>，发现需要插件 hexo-deployer-git 安装后 hexo deploy 报错</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs Bash\">Permission denied (publickey).<br>fatal: Could not <span class=\"hljs-built_in\">read</span> from remote repository.<br></code></pre></td></tr></table></figure>\n\n<p>搜索相关的 <code>git Permission denied</code>的问题</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ol>\n<li><a href=\"http://blog.itpub.net/25851087/viewspace-1262468/\">由于 SSH 配置文件的不匹配，导致的 Permission denied (publickey)及其解决方法 </a></li>\n<li><a href=\"http://my.oschina.net/grnick/blog/201155\">Github 访问时出现 Permission denied (public key)</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2499331/git-with-ssh-on-windows\">Git with SSH on Windows</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2643502/git-permission-denied-publickey\">Git - Permission denied (publickey)</a></li>\n</ol>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><ol>\n<li><p>首先想到的是重新生产公钥和密钥，重新配置 github 账号中的公钥，结果行不通</p>\n</li>\n<li><p>参考链接 1 中，修改了 IdentityFile 的值，还是没有起作用</p>\n</li>\n<li><p>通过参考链接 2 中</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs Bash\">ssh -v git@github.com<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查看使用到的秘钥，可以看到有 id_rsa，可是不起作用，为什么？</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs Bash\">ls /.ssh/ 查看目录下的私钥<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>只有 knowe_hosts</p>\n</blockquote>\n<p>可是我查看的 username/.ssh/ 目录下面有 id_rsa 并且公钥已经加入到 github 中了,百思不得其解啊，突然想到 /.ssh/ 不是 username/.ssh/ 应该是 ssh 单独配置的，通过<code>where ssh</code> 命令查看，当前 ssh 使用的 git 安装的 ssh, 到 git 安装目录 ：<code>C:\\Program Files (x86)\\Git</code> 果然找到了<code>.ssh/</code> 目录，里面有新生产的公钥和密钥，添加到 github 中就可以了</p>\n<h3 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs Bash\">ssh-keygen -t rsa -C <span class=\"hljs-string\">&quot;sumaolin619@gmail.com&quot;</span>  // 生产ssh使用的公钥和私钥<br>ssh -t git@github.com // 测试ssh 是否配置成功<br>ssh -v git@github.com // 查看详细的请求过程，包括使用的公钥密钥<br><span class=\"hljs-built_in\">where</span> ssh // 查看当前的ssh 的路径<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ol>\n<li><p><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\">hexo 你的博客</a> <strong>推荐</strong></p>\n<blockquote>\n<p>博客的主题也挺喜欢的</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"后续更新\"><a href=\"#后续更新\" class=\"headerlink\" title=\"后续更新\"></a>后续更新</h2><h3 id=\"github-amp-coding-同时部署\"><a href=\"#github-amp-coding-同时部署\" class=\"headerlink\" title=\"github &amp; coding 同时部署\"></a>github &amp; coding 同时部署</h3><ol>\n<li>github &amp; coding.net 一键同时部署（coding.net 通过 webhook 自动部署)，国内国外区分访问</li>\n</ol>\n<h4 id=\"参考链接-1\"><a href=\"#参考链接-1\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h4><ol>\n<li><p><a href=\"https://segmentfault.com/a/1190000002900848\">在 Coding 上搭建 Hexo 个人博客！</a></p>\n<p>关于 webhook 的自动部署 说的很明白</p>\n</li>\n<li><p><a href=\"http://www.jianshu.com/p/7ad9d3cd4d6e\">hexo 干货系列：（四）将 hexo 博客同时托管到 github 和 coding</a></p>\n<p>关于 deplay github &amp; coding.net 的写法 ，国内国外区分访问</p>\n</li>\n</ol>\n<h4 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>迁移到 coding.net 后，对与国内的的线路一直无法访问，一直以为修改 DNS 服务商后 没有生效，所以等 48 小时后的今天访问，还是不生效，感觉是自己配置的问题了，由于先参考了<a href=\"https://segmentfault.com/a/1190000002900848\">在 Coding 上搭建 Hexo 个人博客！</a>, 潜意识的 以为只能通过 coding.net 的 演示功能部署呢，今天找问题时候发现，coding.net 的 pages 功能，还可以免费绑定域名（演示平台需要会员才可以绑定域名），所以新建了个个人博客的项目，改_config.yml 直接部署到该项目，把 cname 解析到 sumaolin.coding.me 而不是 sumaolin.coding.io （演示功能用到的域名），几秒后可以访问了！</p>\n<p>其实 <a href=\"http://www.jianshu.com/p/7ad9d3cd4d6e\">hexo 干货系列：（四）将 hexo 博客同时托管到 github 和 coding</a> 提到过 coding.net 两种部署方式的：</p>\n<blockquote>\n<p>部署博客方式有两种，第一种就是 pages 服务的方式，也推荐这种方式，因为可以绑定域名，而第二种演示的方式必须升级会员才能绑定自定义域名。pages 方式也很简单就是在 source/需要创建一个空白文件，至于原因，是因为 coding.net 需要这个文件来作为以静态文件部署的标志。就是说看到这个 Staticfile 就知道按照静态文件来发布。</p>\n</blockquote>\n<p>以后看资料要仔细了，自己的坑自己踩啊！另外 pages 部署的时候不用 创建空白文件 Staticfile 也可以！</p>\n<h3 id=\"图片的使用\"><a href=\"#图片的使用\" class=\"headerlink\" title=\"图片的使用\"></a>图片的使用</h3><h4 id=\"参考链接-2\"><a href=\"#参考链接-2\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h4><ol>\n<li><p><a href=\"http://blog.shiqichan.com/create-blog-with-hexo/\">使用 Hexo 创建十七蝉的日志 # 如何加入图片</a></p>\n<blockquote>\n<p>本地存储图片，将图片放在 source/images 目录下，然后</p>\n<figure class=\"highlight plaintext\"><figcaption><span>text](/img/QQ截图20160403180630.jpg \"测试，本地图片\")</span></figcaption><table><tr><td class=\"code\"><pre><code class=\"hljs ![Alt\"><br></code></pre></td></tr></table></figure></blockquote>\n</li>\n<li><p><a href=\"http://blog.shiqichan.com/use-qiniu-store-image-for-hexo/\">使用七牛为 Hexo 存储图片</a></p>\n<p>从上文中找到了 相关的插件 <a href=\"https://github.com/gyk001/hexo-qiniu-sync\">hexo-qiniu-sync</a>, 插件已经更新完善了，所以直接使用该插件了，参考了该插件的文档</p>\n<p>因为本域名没有备案，还要设置 dns 等</p>\n</li>\n<li><p><a href=\"http://blog.csdn.net/pxzy/article/details/8490058\">Sublime Text 2 中怎样查找 scope 的名称</a></p>\n<p>使用过 sublime plugin “MarkdownEditing” 快捷键 mdi, mdl, mdh1 挺方便的，不过不喜欢在预览模式下写，所以通过 sublime-snippet 直接 定义相应的快捷键，操作方法，参考 <a href=\"http://www.jianshu.com/p/219de00c8343\">使用 Sublime-snippet 来快速做前端页面</a>, 遇到的问题是设置 scole 时候一直无法 trigger ，原谅写错了，一直以为是这个 scope 对应的 sublime Syntax 中的一样就可以了，查找了上面的链接，才发现 too yong too simple 了，mardown 对应的 scope 是 text.html.mardown</p>\n</li>\n</ol>\n<h4 id=\"qiniu-图库使用\"><a href=\"#qiniu-图库使用\" class=\"headerlink\" title=\"qiniu 图库使用\"></a>qiniu 图库使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">λ hexo qiniu i<br>ERROR Plugin load failed: hexo-qiniu-sync<br>SyntaxError: Unexpected token a<br>    at Object.parse (native)<br>    at Object.&lt;anonymous&gt; (E:\\hexoBlog\\hexo\\node_modules\\hexo-qiniu-sync\\config.js:10:17)<br>    at Module._compile (module.js:409:26)<br>    at Object.Module._extensions..js (module.js:416:10)<br>    at Module.load (module.js:343:32)<br>    at Function.Module._load (module.js:300:12)<br>    at Module.require (module.js:353:17)<br>    at require (E:\\hexoBlog\\hexo\\node_modules\\hexo\\lib\\hexo\\index.js:213:21)<br>    at E:\\hexoBlog\\hexo\\node_modules\\hexo-qiniu-sync\\index.js:9:14<br>    at E:\\hexoBlog\\hexo\\node_modules\\hexo\\lib\\hexo\\index.js:229:12<br>    at tryCatcher (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\util.js:16:23)<br>    at Promise._settlePromiseFromHandler (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:497:31)<br>    at Promise._settlePromise (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:555:18)<br>    at Promise._settlePromise0 (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:600:10)<br>    at Promise._settlePromises (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:683:18)<br>    at Promise._fulfill (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:624:18)<br>    at Promise._resolveCallback (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:424:57)<br>    at Promise._settlePromiseFromHandler (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:510:17)<br>    at Promise._settlePromise (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:555:18)<br>    at Promise._settlePromise0 (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:600:10)<br>    at Promise._settlePromises (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:683:18)<br>    at Promise._fulfill (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:624:18)<br>    at E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\nodeback.js:42:21<br>    at E:\\hexoBlog\\hexo\\node_modules\\graceful-fs\\graceful-fs.js:78:16<br>    at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:380:3)<br></code></pre></td></tr></table></figure>\n\n<p>一直报错，全部是从 <a href=\"https://github.com/gyk001/hexo-qiniu-sync\">hexo-qiniu-sync</a> 中复制粘贴过来的，只是把七牛的秘钥文件单独出来了，没有找到原因</p>\n<h4 id=\"2016-08-10\"><a href=\"#2016-08-10\" class=\"headerlink\" title=\"2016-08-10\"></a>2016-08-10</h4><p>继续前天的工作，想到了先把秘钥配置写到 _config.xml 中测试了下是 OK 的，那么就是单独读取秘钥文件的时候不成功，可能的原因：</p>\n<ol>\n<li>秘钥路径不正确 改为 <code>./sec/qn.json</code></li>\n<li>qn.json 文件格式不正确，改为了严格的 json 格式 OK 了</li>\n</ol>\n<p>插件的配置 OK 了，看下插件的使用了，官网的使用方式：</p>\n<figure class=\"highlight django\"><table><tr><td class=\"code\"><pre><code class=\"hljs django\"><span class=\"hljs-template-tag\">&#123;% <span class=\"hljs-name\">qnimg</span> qiniu.jpg title:qnimg alt:qnimg %&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>文件保存到根目录下的 static/img 目录下，同步成功了</p>\n<p>页面上不显示：</p>\n<ol>\n<li>我开启了白名单功能，只有白名单中的域名可以加载</li>\n<li>设置了自定义域名功能，需要设置 <code>urlPrefix</code>属性设置为自定义的域名</li>\n</ol>\n<p>每次都贴一次很麻烦啊，直接定义 sublime text snippet: qnimg:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">snippet</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">content</span></span><br><span class=\"hljs-tag\">    &gt;</span>&lt;![CDATA[ &#123;% qnimg $&#123;1:imgName&#125; title:$&#123;2:imgTitile&#125; alt:$&#123;2:imgTitle&#125; %&#125;<br>    ]]&gt;&lt;/content<br>  &gt;<br>  <span class=\"hljs-comment\">&lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tabTrigger</span>&gt;</span>qnimg<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tabTrigger</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!-- Optional: Set a scope to limit where the snippet will trigger --&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>text.html.markdown<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">snippet</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>这样就完美了 每次 qnimg Tab 下就可以了</p>\n<p>发现个美中不足的地方： <a href=\"https://github.com/gyk001/hexo-qiniu-sync/issues/39\">qiniu 中开启了防盗链白名单功能，所以本地 hexo s 时无法实时预览图片？</a> 期望有解决方法</p>\n<h4 id=\"2016-08-12\"><a href=\"#2016-08-12\" class=\"headerlink\" title=\"2016-08-12\"></a>2016-08-12</h4><p>根据作者的介绍使用 <code>offline:true</code>配置可以开启 本地调用功能的，并且更新到 V 1.4.5 版本解决了软连的问题</p>\n<h4 id=\"2016-09-27\"><a href=\"#2016-09-27\" class=\"headerlink\" title=\"2016-09-27\"></a>2016-09-27</h4><p>更新的时候 hexo v3.2.2 更新后 没有了 hexo server 选项了，这也没法开启 offline:true 验证了，hexo 官方确认是个 windows 下的 bug</p>\n<h4 id=\"2016-12-21\"><a href=\"#2016-12-21\" class=\"headerlink\" title=\"2016-12-21\"></a>2016-12-21</h4><p>有时间了，再折腾下上次遗留的问题： <code>hexo-qiniu-sync插件配置好后 hexo server 无法启动了</code></p>\n<ol>\n<li><p> 上次冲洗 hexo init 个 blog 是有 hexo server 命令的，所以肯定了这个是插件引起的问题</p>\n</li>\n<li><p> 在配置_config.yml 中去掉了关于 hexo-qiniu-sync 的配置</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">λ hexo server<br>ERROR Plugin load failed: hexo-qiniu-sync<br>TypeError: Cannot <span class=\"hljs-built_in\">read</span> property <span class=\"hljs-string\">&#x27;secret_file&#x27;</span> of undefined<br>    at Object.&lt;anonymous&gt; (F:\\nodeDev\\hexo\\node_modules\\hexo-qiniu-sync\\config.js:8:21)<br>    at Module._compile (module.js:409:26)<br>    at Object.Module._extensions..js (module.js:416:10)<br>    at Module.load (module.js:343:32)<br>    at Function.Module._load (module.js:300:12)<br>    at Module.require (module.js:353:17)<br>    at require (F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\index.js:213:21)<br>    at F:\\nodeDev\\hexo\\node_modules\\hexo-qiniu-sync\\index.js:9:14<br>    at F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\index.js:229:12<br>    at tryCatcher (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23)<br>    at Promise._settlePromiseFromHandler (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:510:31)<br>    at Promise._settlePromise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:567:18)<br>    at Promise._settlePromise0 (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:612:10)<br>    at Promise._settlePromises (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:691:18)<br>    at Promise._fulfill (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:636:18)<br>    at Promise._resolveCallback (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:431:57)<br>    at Promise._settlePromiseFromHandler (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:522:17)<br>    at Promise._settlePromise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:567:18)<br>    at Promise._settlePromise0 (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:612:10)<br>    at Promise._settlePromises (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:691:18)<br>    at Promise._fulfill (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:636:18)<br>    at F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\nodeback.js:42:21<br>INFO  Start processing<br>FATAL Something<span class=\"hljs-string\">&#x27;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class=\"hljs-string\">Template render error: (unknown path) [Line 91, Column 2]</span><br><span class=\"hljs-string\">  unknown block tag: qnimg</span><br><span class=\"hljs-string\">    at Object.exports.prettifyError (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\lib.js:34:15)</span><br><span class=\"hljs-string\">    at Obj.extend.render (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\environment.js:469:27)</span><br><span class=\"hljs-string\">    at Obj.extend.renderString (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\environment.js:327:21)</span><br><span class=\"hljs-string\">    at F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:66:9</span><br><span class=\"hljs-string\">    at Promise._execute (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\debuggability.js:299:9)</span><br><span class=\"hljs-string\">    at Promise._resolveFromExecutor (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:481:18)</span><br><span class=\"hljs-string\">    at new Promise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:77:14)</span><br><span class=\"hljs-string\">    at Tag.render (F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:64:10)</span><br><span class=\"hljs-string\">    at Object.tagFilter [as onRenderEnd] (F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\post.js:253:16)</span><br><span class=\"hljs-string\">    at F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\render.js:65:19</span><br><span class=\"hljs-string\">    at tryCatcher (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23)</span><br><span class=\"hljs-string\">    at Promise._settlePromiseFromHandler (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:510:31)</span><br><span class=\"hljs-string\">    at Promise._settlePromise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:567:18)</span><br><span class=\"hljs-string\">    at Promise._settlePromise0 (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:612:10)</span><br><span class=\"hljs-string\">    at Promise._settlePromises (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:691:18)</span><br><span class=\"hljs-string\">    at Async._drainQueue (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:138:16)</span><br><span class=\"hljs-string\">    at Async._drainQueues (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:148:10)</span><br><span class=\"hljs-string\">    at Immediate.Async.drainQueues [as _onImmediate] (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:17:14)</span><br><span class=\"hljs-string\">    at processImmediate [as _immediateCallback] (timers.js:383:17)</span><br><span class=\"hljs-string\">FATAL (unknown path) [Line 91, Column 2]</span><br><span class=\"hljs-string\">  unknown block tag: qnimg</span><br><span class=\"hljs-string\">Template render error: (unknown path) [Line 91, Column 2]</span><br><span class=\"hljs-string\">  unknown block tag: qnimg</span><br><span class=\"hljs-string\">    at Object.exports.prettifyError (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\lib.js:34:15)</span><br><span class=\"hljs-string\">    at Obj.extend.render (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\environment.js:469:27)</span><br><span class=\"hljs-string\">    at Obj.extend.renderString (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\environment.js:327:21)</span><br><span class=\"hljs-string\">    at F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:66:9</span><br><span class=\"hljs-string\">    at Promise._execute (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\debuggability.js:299:9)</span><br><span class=\"hljs-string\">    at Promise._resolveFromExecutor (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:481:18)</span><br><span class=\"hljs-string\">    at new Promise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:77:14)</span><br><span class=\"hljs-string\">    at Tag.render (F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:64:10)</span><br><span class=\"hljs-string\">    at Object.tagFilter [as onRenderEnd] (F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\post.js:253:16)</span><br><span class=\"hljs-string\">    at F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\render.js:65:19</span><br><span class=\"hljs-string\">    at tryCatcher (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23)</span><br><span class=\"hljs-string\">    at Promise._settlePromiseFromHandler (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:510:31)</span><br><span class=\"hljs-string\">    at Promise._settlePromise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:567:18)</span><br><span class=\"hljs-string\">    at Promise._settlePromise0 (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:612:10)</span><br><span class=\"hljs-string\">    at Promise._settlePromises (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:691:18)</span><br><span class=\"hljs-string\">    at Async._drainQueue (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:138:16)</span><br><span class=\"hljs-string\">    at Async._drainQueues (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:148:10)</span><br><span class=\"hljs-string\">    at Immediate.Async.drainQueues [as _onImmediate] (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:17:14)</span><br><span class=\"hljs-string\">    at processImmediate [as _immediateCallback] (timers.js:383:17)</span><br><span class=\"hljs-string\"></span><br></code></pre></td></tr></table></figure>\n\n<p>看来是安装了 hexo-qiniu-sync 插件的问题</p>\n<p>搜索了下相关问题，找到了条有价值的信息: <a href=\"http://mp.weixin.qq.com/s?__biz=MzIzNzEzNDMxOA==&idx=1&mid=2651006828&sn=c553c202b1162f6bd37d87a41a8a961d\">Hexo 七牛云同步插件的使用</a></p>\n<blockquote>\n<p>基本的安装、配置在插件主页也有过说明，按照配置即可，这里记录下遇到的坑。注意在_config.yml 中不要配置插件栏如下，否则会报错找不到 hexo server 的命令，可参考问题: <a href=\"https://github.com/gyk001/hexo-qiniu-sync/issues/41\">https://github.com/gyk001/hexo-qiniu-sync/issues/41</a></p>\n</blockquote>\n<p>原来官方已经解决了，按照提示注释掉 插件就可以了，再来个测试 OK</p>\n<p>发现刚才测试的 考辛斯的图片并没有同步到七牛 ，并且 deploy 后连接还是原来的域名下的</p>\n<h4 id=\"2017-05-13\"><a href=\"#2017-05-13\" class=\"headerlink\" title=\"2017-05-13\"></a>2017-05-13</h4><p>终于完成了这个 hexo-qiniu-sync 插件的调试，可以痛快的使用了</p>\n<p>下面在弄个自己的<a href=\"/2017/05/13/hexo-theme/\">hexo-theme</a></p>\n<ol>\n<li>前几天测试过从新 <code>hexo init</code> 个新项目的话 是有 <code>hexo server</code> 命令并且能够运行的，看来是 hexo-qiniu-sync 插件出问题了。有时间修复下</li>\n<li>自动部署的问题 看到了个更简洁的: <a href=\"https://www.jianshu.com/p/e22c13d85659\">手把手教你使用 Travis CI 自动部署你的 Hexo 博客到 Github 上</a></li>\n</ol>\n<h4 id=\"2019-08-28\"><a href=\"#2019-08-28\" class=\"headerlink\" title=\"2019-08-28\"></a>2019-08-28</h4><p> 七牛的服务停掉了，算是弃坑七牛了，自动部署时候一直报错！</p>\n<p>新开了篇新文章，整理 <a href=\"/2017/05/13/hexo-theme/\">hexo-theme</a> </p>\n","more":"<h2 id=\"基本的安装\"><a href=\"#基本的安装\" class=\"headerlink\" title=\"基本的安装\"></a>基本的安装</h2><p>(懒癌发作!)都是做开发的不一步步讲解了，直接上参考链接吧：</p>\n<ol>\n<li><a href=\"http://yangjian.me/workspace/building-blog-with-hexo/\">使用 hexo 搭建博客</a> <strong>无效了无奈</strong></li>\n</ol>\n<h3 id=\"本地调试地址端口无效\"><a href=\"#本地调试地址端口无效\" class=\"headerlink\" title=\"本地调试地址端口无效\"></a>本地调试地址端口无效</h3><h4 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><p>搜索参考网上的说是端口占用了 把 ip 地址改为常用的 127.0.0.1:4000 就 OK 了<br>修改方法：直接找到<code>node_modules/ hexo-serve/index.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs Javascript\">hexo.config.server = assign(&#123;<br>  <span class=\"hljs-attr\">log</span>: <span class=\"hljs-literal\">false</span>,<br>  <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-string\">&#x27;127.0.0.1&#x27;</span><br>&#125;, hexo.config.server);<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2016-02-22-更新\"><a href=\"#2016-02-22-更新\" class=\"headerlink\" title=\"2016.02.22 更新\"></a>2016.02.22 更新</h4><p>参考了 <a href=\"https://github.com/hexojs/hexo-server\">hexo-server</a>, 本地服务的 IP ，和 port 可以在启动参数中配置的</p>\n<p>还可以直接写到站点的 配置文件中_config.yml</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs Javascript\">server:<br>  port: <span class=\"hljs-number\">4000</span><br>  <span class=\"hljs-attr\">log</span>: <span class=\"hljs-literal\">false</span><br>  <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><br>  <span class=\"hljs-attr\">compress</span>: <span class=\"hljs-literal\">false</span><br>  <span class=\"hljs-attr\">header</span>: <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"主题安装-themes\"><a href=\"#主题安装-themes\" class=\"headerlink\" title=\"主题安装 themes\"></a>主题安装 themes</h3><p>喜欢的主题 <a href=\"https://github.com/iissnan/hexo-theme-next\">hexo-theme-next</a> ，使用文档很详细：<a href=\"http://theme-next.iissnan.com/\">文档地址</a> ，不废话了！</p>\n<p>喜欢的主题列表</p>\n<ol>\n<li><a href=\"https://github.com/heroicyang/hexo-theme-modernist\">hexo-theme-modernist</a></li>\n<li><a href=\"https://github.com/iissnan/hexo-theme-next\">hexo-theme-next</a></li>\n</ol>\n<h4 id=\"评论\"><a href=\"#评论\" class=\"headerlink\" title=\"评论\"></a>评论</h4><p><a href=\"http://duoshuo.com/\">多说</a> 服务停掉了，想法使用 gittalk 或者 gitment</p>\n<h4 id=\"统计\"><a href=\"#统计\" class=\"headerlink\" title=\"统计\"></a>统计</h4><p><a href=\"http://sitecenter.baidu.com/sc-web/\">百度统计</a> ，现在换掉了，改成了 Google analyst</p>\n<h4 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h4><p><a href=\"https://swiftype.com/\">Swiftype</a> 并没使用上</p>\n<h4 id=\"文章摘要\"><a href=\"#文章摘要\" class=\"headerlink\" title=\"文章摘要\"></a>文章摘要</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><code class=\"hljs Javascript\">以上是摘要<br>&lt;!--more--&gt;<br>以下是全文<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"部署上线\"><a href=\"#部署上线\" class=\"headerlink\" title=\"部署上线\"></a>部署上线</h2><h3 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h3><p>上面都是配置问题，本地没有问题的，终究要部署到<code>github.com</code> 上的，那么问题来了</p>\n<p>部署上去 无法访问，我是在 git 的根目录下有新建了个 blog 目录，因为原来的 git 下有东西了</p>\n<p>怀疑是自己的 git root 下面已经有东西了，在子目录 blog 下影响的，把 git remote 改为新的地址：<code>git@github.com:sumaolin/hexo.git</code></p>\n<p>可是 hexo deploy 还是报错</p>\n<p><a href=\"https://hexo.io/zh-cn/docs/deployment.html\">查官方文档</a>，发现需要插件 hexo-deployer-git 安装后 hexo deploy 报错</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs Bash\">Permission denied (publickey).<br>fatal: Could not <span class=\"hljs-built_in\">read</span> from remote repository.<br></code></pre></td></tr></table></figure>\n\n<p>搜索相关的 <code>git Permission denied</code>的问题</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ol>\n<li><a href=\"http://blog.itpub.net/25851087/viewspace-1262468/\">由于 SSH 配置文件的不匹配，导致的 Permission denied (publickey)及其解决方法 </a></li>\n<li><a href=\"http://my.oschina.net/grnick/blog/201155\">Github 访问时出现 Permission denied (public key)</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2499331/git-with-ssh-on-windows\">Git with SSH on Windows</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2643502/git-permission-denied-publickey\">Git - Permission denied (publickey)</a></li>\n</ol>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><ol>\n<li><p>首先想到的是重新生产公钥和密钥，重新配置 github 账号中的公钥，结果行不通</p>\n</li>\n<li><p>参考链接 1 中，修改了 IdentityFile 的值，还是没有起作用</p>\n</li>\n<li><p>通过参考链接 2 中</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs Bash\">ssh -v git@github.com<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查看使用到的秘钥，可以看到有 id_rsa，可是不起作用，为什么？</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs Bash\">ls /.ssh/ 查看目录下的私钥<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>只有 knowe_hosts</p>\n</blockquote>\n<p>可是我查看的 username/.ssh/ 目录下面有 id_rsa 并且公钥已经加入到 github 中了,百思不得其解啊，突然想到 /.ssh/ 不是 username/.ssh/ 应该是 ssh 单独配置的，通过<code>where ssh</code> 命令查看，当前 ssh 使用的 git 安装的 ssh, 到 git 安装目录 ：<code>C:\\Program Files (x86)\\Git</code> 果然找到了<code>.ssh/</code> 目录，里面有新生产的公钥和密钥，添加到 github 中就可以了</p>\n<h3 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs Bash\">ssh-keygen -t rsa -C <span class=\"hljs-string\">&quot;sumaolin619@gmail.com&quot;</span>  // 生产ssh使用的公钥和私钥<br>ssh -t git@github.com // 测试ssh 是否配置成功<br>ssh -v git@github.com // 查看详细的请求过程，包括使用的公钥密钥<br><span class=\"hljs-built_in\">where</span> ssh // 查看当前的ssh 的路径<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ol>\n<li><p><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\">hexo 你的博客</a> <strong>推荐</strong></p>\n<blockquote>\n<p>博客的主题也挺喜欢的</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"后续更新\"><a href=\"#后续更新\" class=\"headerlink\" title=\"后续更新\"></a>后续更新</h2><h3 id=\"github-amp-coding-同时部署\"><a href=\"#github-amp-coding-同时部署\" class=\"headerlink\" title=\"github &amp; coding 同时部署\"></a>github &amp; coding 同时部署</h3><ol>\n<li>github &amp; coding.net 一键同时部署（coding.net 通过 webhook 自动部署)，国内国外区分访问</li>\n</ol>\n<h4 id=\"参考链接-1\"><a href=\"#参考链接-1\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h4><ol>\n<li><p><a href=\"https://segmentfault.com/a/1190000002900848\">在 Coding 上搭建 Hexo 个人博客！</a></p>\n<p>关于 webhook 的自动部署 说的很明白</p>\n</li>\n<li><p><a href=\"http://www.jianshu.com/p/7ad9d3cd4d6e\">hexo 干货系列：（四）将 hexo 博客同时托管到 github 和 coding</a></p>\n<p>关于 deplay github &amp; coding.net 的写法 ，国内国外区分访问</p>\n</li>\n</ol>\n<h4 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>迁移到 coding.net 后，对与国内的的线路一直无法访问，一直以为修改 DNS 服务商后 没有生效，所以等 48 小时后的今天访问，还是不生效，感觉是自己配置的问题了，由于先参考了<a href=\"https://segmentfault.com/a/1190000002900848\">在 Coding 上搭建 Hexo 个人博客！</a>, 潜意识的 以为只能通过 coding.net 的 演示功能部署呢，今天找问题时候发现，coding.net 的 pages 功能，还可以免费绑定域名（演示平台需要会员才可以绑定域名），所以新建了个个人博客的项目，改_config.yml 直接部署到该项目，把 cname 解析到 sumaolin.coding.me 而不是 sumaolin.coding.io （演示功能用到的域名），几秒后可以访问了！</p>\n<p>其实 <a href=\"http://www.jianshu.com/p/7ad9d3cd4d6e\">hexo 干货系列：（四）将 hexo 博客同时托管到 github 和 coding</a> 提到过 coding.net 两种部署方式的：</p>\n<blockquote>\n<p>部署博客方式有两种，第一种就是 pages 服务的方式，也推荐这种方式，因为可以绑定域名，而第二种演示的方式必须升级会员才能绑定自定义域名。pages 方式也很简单就是在 source/需要创建一个空白文件，至于原因，是因为 coding.net 需要这个文件来作为以静态文件部署的标志。就是说看到这个 Staticfile 就知道按照静态文件来发布。</p>\n</blockquote>\n<p>以后看资料要仔细了，自己的坑自己踩啊！另外 pages 部署的时候不用 创建空白文件 Staticfile 也可以！</p>\n<h3 id=\"图片的使用\"><a href=\"#图片的使用\" class=\"headerlink\" title=\"图片的使用\"></a>图片的使用</h3><h4 id=\"参考链接-2\"><a href=\"#参考链接-2\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h4><ol>\n<li><p><a href=\"http://blog.shiqichan.com/create-blog-with-hexo/\">使用 Hexo 创建十七蝉的日志 # 如何加入图片</a></p>\n<blockquote>\n<p>本地存储图片，将图片放在 source/images 目录下，然后</p>\n<figure class=\"highlight plaintext\"><figcaption><span>text](/img/QQ截图20160403180630.jpg \"测试，本地图片\")</span></figcaption><table><tr><td class=\"code\"><pre><code class=\"hljs ![Alt\"><br></code></pre></td></tr></table></figure></blockquote>\n</li>\n<li><p><a href=\"http://blog.shiqichan.com/use-qiniu-store-image-for-hexo/\">使用七牛为 Hexo 存储图片</a></p>\n<p>从上文中找到了 相关的插件 <a href=\"https://github.com/gyk001/hexo-qiniu-sync\">hexo-qiniu-sync</a>, 插件已经更新完善了，所以直接使用该插件了，参考了该插件的文档</p>\n<p>因为本域名没有备案，还要设置 dns 等</p>\n</li>\n<li><p><a href=\"http://blog.csdn.net/pxzy/article/details/8490058\">Sublime Text 2 中怎样查找 scope 的名称</a></p>\n<p>使用过 sublime plugin “MarkdownEditing” 快捷键 mdi, mdl, mdh1 挺方便的，不过不喜欢在预览模式下写，所以通过 sublime-snippet 直接 定义相应的快捷键，操作方法，参考 <a href=\"http://www.jianshu.com/p/219de00c8343\">使用 Sublime-snippet 来快速做前端页面</a>, 遇到的问题是设置 scole 时候一直无法 trigger ，原谅写错了，一直以为是这个 scope 对应的 sublime Syntax 中的一样就可以了，查找了上面的链接，才发现 too yong too simple 了，mardown 对应的 scope 是 text.html.mardown</p>\n</li>\n</ol>\n<h4 id=\"qiniu-图库使用\"><a href=\"#qiniu-图库使用\" class=\"headerlink\" title=\"qiniu 图库使用\"></a>qiniu 图库使用</h4><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">λ hexo qiniu i<br>ERROR Plugin load failed: hexo-qiniu-sync<br>SyntaxError: Unexpected token a<br>    at Object.parse (native)<br>    at Object.&lt;anonymous&gt; (E:\\hexoBlog\\hexo\\node_modules\\hexo-qiniu-sync\\config.js:10:17)<br>    at Module._compile (module.js:409:26)<br>    at Object.Module._extensions..js (module.js:416:10)<br>    at Module.load (module.js:343:32)<br>    at Function.Module._load (module.js:300:12)<br>    at Module.require (module.js:353:17)<br>    at require (E:\\hexoBlog\\hexo\\node_modules\\hexo\\lib\\hexo\\index.js:213:21)<br>    at E:\\hexoBlog\\hexo\\node_modules\\hexo-qiniu-sync\\index.js:9:14<br>    at E:\\hexoBlog\\hexo\\node_modules\\hexo\\lib\\hexo\\index.js:229:12<br>    at tryCatcher (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\util.js:16:23)<br>    at Promise._settlePromiseFromHandler (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:497:31)<br>    at Promise._settlePromise (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:555:18)<br>    at Promise._settlePromise0 (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:600:10)<br>    at Promise._settlePromises (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:683:18)<br>    at Promise._fulfill (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:624:18)<br>    at Promise._resolveCallback (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:424:57)<br>    at Promise._settlePromiseFromHandler (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:510:17)<br>    at Promise._settlePromise (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:555:18)<br>    at Promise._settlePromise0 (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:600:10)<br>    at Promise._settlePromises (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:683:18)<br>    at Promise._fulfill (E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\promise.js:624:18)<br>    at E:\\hexoBlog\\hexo\\node_modules\\hexo-fs\\node_modules\\bluebird\\js\\release\\nodeback.js:42:21<br>    at E:\\hexoBlog\\hexo\\node_modules\\graceful-fs\\graceful-fs.js:78:16<br>    at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:380:3)<br></code></pre></td></tr></table></figure>\n\n<p>一直报错，全部是从 <a href=\"https://github.com/gyk001/hexo-qiniu-sync\">hexo-qiniu-sync</a> 中复制粘贴过来的，只是把七牛的秘钥文件单独出来了，没有找到原因</p>\n<h4 id=\"2016-08-10\"><a href=\"#2016-08-10\" class=\"headerlink\" title=\"2016-08-10\"></a>2016-08-10</h4><p>继续前天的工作，想到了先把秘钥配置写到 _config.xml 中测试了下是 OK 的，那么就是单独读取秘钥文件的时候不成功，可能的原因：</p>\n<ol>\n<li>秘钥路径不正确 改为 <code>./sec/qn.json</code></li>\n<li>qn.json 文件格式不正确，改为了严格的 json 格式 OK 了</li>\n</ol>\n<p>插件的配置 OK 了，看下插件的使用了，官网的使用方式：</p>\n<figure class=\"highlight django\"><table><tr><td class=\"code\"><pre><code class=\"hljs django\"><span class=\"hljs-template-tag\">&#123;% <span class=\"hljs-name\">qnimg</span> qiniu.jpg title:qnimg alt:qnimg %&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>文件保存到根目录下的 static/img 目录下，同步成功了</p>\n<p>页面上不显示：</p>\n<ol>\n<li>我开启了白名单功能，只有白名单中的域名可以加载</li>\n<li>设置了自定义域名功能，需要设置 <code>urlPrefix</code>属性设置为自定义的域名</li>\n</ol>\n<p>每次都贴一次很麻烦啊，直接定义 sublime text snippet: qnimg:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">snippet</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">content</span></span><br><span class=\"hljs-tag\">    &gt;</span>&lt;![CDATA[ &#123;% qnimg $&#123;1:imgName&#125; title:$&#123;2:imgTitile&#125; alt:$&#123;2:imgTitle&#125; %&#125;<br>    ]]&gt;&lt;/content<br>  &gt;<br>  <span class=\"hljs-comment\">&lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tabTrigger</span>&gt;</span>qnimg<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tabTrigger</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!-- Optional: Set a scope to limit where the snippet will trigger --&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>text.html.markdown<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">snippet</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>这样就完美了 每次 qnimg Tab 下就可以了</p>\n<p>发现个美中不足的地方： <a href=\"https://github.com/gyk001/hexo-qiniu-sync/issues/39\">qiniu 中开启了防盗链白名单功能，所以本地 hexo s 时无法实时预览图片？</a> 期望有解决方法</p>\n<h4 id=\"2016-08-12\"><a href=\"#2016-08-12\" class=\"headerlink\" title=\"2016-08-12\"></a>2016-08-12</h4><p>根据作者的介绍使用 <code>offline:true</code>配置可以开启 本地调用功能的，并且更新到 V 1.4.5 版本解决了软连的问题</p>\n<h4 id=\"2016-09-27\"><a href=\"#2016-09-27\" class=\"headerlink\" title=\"2016-09-27\"></a>2016-09-27</h4><p>更新的时候 hexo v3.2.2 更新后 没有了 hexo server 选项了，这也没法开启 offline:true 验证了，hexo 官方确认是个 windows 下的 bug</p>\n<h4 id=\"2016-12-21\"><a href=\"#2016-12-21\" class=\"headerlink\" title=\"2016-12-21\"></a>2016-12-21</h4><p>有时间了，再折腾下上次遗留的问题： <code>hexo-qiniu-sync插件配置好后 hexo server 无法启动了</code></p>\n<ol>\n<li><p> 上次冲洗 hexo init 个 blog 是有 hexo server 命令的，所以肯定了这个是插件引起的问题</p>\n</li>\n<li><p> 在配置_config.yml 中去掉了关于 hexo-qiniu-sync 的配置</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">λ hexo server<br>ERROR Plugin load failed: hexo-qiniu-sync<br>TypeError: Cannot <span class=\"hljs-built_in\">read</span> property <span class=\"hljs-string\">&#x27;secret_file&#x27;</span> of undefined<br>    at Object.&lt;anonymous&gt; (F:\\nodeDev\\hexo\\node_modules\\hexo-qiniu-sync\\config.js:8:21)<br>    at Module._compile (module.js:409:26)<br>    at Object.Module._extensions..js (module.js:416:10)<br>    at Module.load (module.js:343:32)<br>    at Function.Module._load (module.js:300:12)<br>    at Module.require (module.js:353:17)<br>    at require (F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\index.js:213:21)<br>    at F:\\nodeDev\\hexo\\node_modules\\hexo-qiniu-sync\\index.js:9:14<br>    at F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\index.js:229:12<br>    at tryCatcher (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23)<br>    at Promise._settlePromiseFromHandler (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:510:31)<br>    at Promise._settlePromise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:567:18)<br>    at Promise._settlePromise0 (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:612:10)<br>    at Promise._settlePromises (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:691:18)<br>    at Promise._fulfill (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:636:18)<br>    at Promise._resolveCallback (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:431:57)<br>    at Promise._settlePromiseFromHandler (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:522:17)<br>    at Promise._settlePromise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:567:18)<br>    at Promise._settlePromise0 (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:612:10)<br>    at Promise._settlePromises (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:691:18)<br>    at Promise._fulfill (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:636:18)<br>    at F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\nodeback.js:42:21<br>INFO  Start processing<br>FATAL Something<span class=\"hljs-string\">&#x27;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class=\"hljs-string\">Template render error: (unknown path) [Line 91, Column 2]</span><br><span class=\"hljs-string\">  unknown block tag: qnimg</span><br><span class=\"hljs-string\">    at Object.exports.prettifyError (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\lib.js:34:15)</span><br><span class=\"hljs-string\">    at Obj.extend.render (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\environment.js:469:27)</span><br><span class=\"hljs-string\">    at Obj.extend.renderString (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\environment.js:327:21)</span><br><span class=\"hljs-string\">    at F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:66:9</span><br><span class=\"hljs-string\">    at Promise._execute (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\debuggability.js:299:9)</span><br><span class=\"hljs-string\">    at Promise._resolveFromExecutor (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:481:18)</span><br><span class=\"hljs-string\">    at new Promise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:77:14)</span><br><span class=\"hljs-string\">    at Tag.render (F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:64:10)</span><br><span class=\"hljs-string\">    at Object.tagFilter [as onRenderEnd] (F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\post.js:253:16)</span><br><span class=\"hljs-string\">    at F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\render.js:65:19</span><br><span class=\"hljs-string\">    at tryCatcher (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23)</span><br><span class=\"hljs-string\">    at Promise._settlePromiseFromHandler (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:510:31)</span><br><span class=\"hljs-string\">    at Promise._settlePromise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:567:18)</span><br><span class=\"hljs-string\">    at Promise._settlePromise0 (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:612:10)</span><br><span class=\"hljs-string\">    at Promise._settlePromises (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:691:18)</span><br><span class=\"hljs-string\">    at Async._drainQueue (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:138:16)</span><br><span class=\"hljs-string\">    at Async._drainQueues (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:148:10)</span><br><span class=\"hljs-string\">    at Immediate.Async.drainQueues [as _onImmediate] (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:17:14)</span><br><span class=\"hljs-string\">    at processImmediate [as _immediateCallback] (timers.js:383:17)</span><br><span class=\"hljs-string\">FATAL (unknown path) [Line 91, Column 2]</span><br><span class=\"hljs-string\">  unknown block tag: qnimg</span><br><span class=\"hljs-string\">Template render error: (unknown path) [Line 91, Column 2]</span><br><span class=\"hljs-string\">  unknown block tag: qnimg</span><br><span class=\"hljs-string\">    at Object.exports.prettifyError (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\lib.js:34:15)</span><br><span class=\"hljs-string\">    at Obj.extend.render (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\environment.js:469:27)</span><br><span class=\"hljs-string\">    at Obj.extend.renderString (F:\\nodeDev\\hexo\\node_modules\\nunjucks\\src\\environment.js:327:21)</span><br><span class=\"hljs-string\">    at F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:66:9</span><br><span class=\"hljs-string\">    at Promise._execute (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\debuggability.js:299:9)</span><br><span class=\"hljs-string\">    at Promise._resolveFromExecutor (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:481:18)</span><br><span class=\"hljs-string\">    at new Promise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:77:14)</span><br><span class=\"hljs-string\">    at Tag.render (F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\extend\\tag.js:64:10)</span><br><span class=\"hljs-string\">    at Object.tagFilter [as onRenderEnd] (F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\post.js:253:16)</span><br><span class=\"hljs-string\">    at F:\\nodeDev\\hexo\\node_modules\\hexo\\lib\\hexo\\render.js:65:19</span><br><span class=\"hljs-string\">    at tryCatcher (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\util.js:16:23)</span><br><span class=\"hljs-string\">    at Promise._settlePromiseFromHandler (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:510:31)</span><br><span class=\"hljs-string\">    at Promise._settlePromise (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:567:18)</span><br><span class=\"hljs-string\">    at Promise._settlePromise0 (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:612:10)</span><br><span class=\"hljs-string\">    at Promise._settlePromises (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\promise.js:691:18)</span><br><span class=\"hljs-string\">    at Async._drainQueue (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:138:16)</span><br><span class=\"hljs-string\">    at Async._drainQueues (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:148:10)</span><br><span class=\"hljs-string\">    at Immediate.Async.drainQueues [as _onImmediate] (F:\\nodeDev\\hexo\\node_modules\\bluebird\\js\\release\\async.js:17:14)</span><br><span class=\"hljs-string\">    at processImmediate [as _immediateCallback] (timers.js:383:17)</span><br><span class=\"hljs-string\"></span><br></code></pre></td></tr></table></figure>\n\n<p>看来是安装了 hexo-qiniu-sync 插件的问题</p>\n<p>搜索了下相关问题，找到了条有价值的信息: <a href=\"http://mp.weixin.qq.com/s?__biz=MzIzNzEzNDMxOA==&idx=1&mid=2651006828&sn=c553c202b1162f6bd37d87a41a8a961d\">Hexo 七牛云同步插件的使用</a></p>\n<blockquote>\n<p>基本的安装、配置在插件主页也有过说明，按照配置即可，这里记录下遇到的坑。注意在_config.yml 中不要配置插件栏如下，否则会报错找不到 hexo server 的命令，可参考问题: <a href=\"https://github.com/gyk001/hexo-qiniu-sync/issues/41\">https://github.com/gyk001/hexo-qiniu-sync/issues/41</a></p>\n</blockquote>\n<p>原来官方已经解决了，按照提示注释掉 插件就可以了，再来个测试 OK</p>\n<p>发现刚才测试的 考辛斯的图片并没有同步到七牛 ，并且 deploy 后连接还是原来的域名下的</p>\n<h4 id=\"2017-05-13\"><a href=\"#2017-05-13\" class=\"headerlink\" title=\"2017-05-13\"></a>2017-05-13</h4><p>终于完成了这个 hexo-qiniu-sync 插件的调试，可以痛快的使用了</p>\n<p>下面在弄个自己的<a href=\"/2017/05/13/hexo-theme/\">hexo-theme</a></p>\n<ol>\n<li>前几天测试过从新 <code>hexo init</code> 个新项目的话 是有 <code>hexo server</code> 命令并且能够运行的，看来是 hexo-qiniu-sync 插件出问题了。有时间修复下</li>\n<li>自动部署的问题 看到了个更简洁的: <a href=\"https://www.jianshu.com/p/e22c13d85659\">手把手教你使用 Travis CI 自动部署你的 Hexo 博客到 Github 上</a></li>\n</ol>\n<h4 id=\"2019-08-28\"><a href=\"#2019-08-28\" class=\"headerlink\" title=\"2019-08-28\"></a>2019-08-28</h4><p> 七牛的服务停掉了，算是弃坑七牛了，自动部署时候一直报错！</p>\n<p>新开了篇新文章，整理 <a href=\"/2017/05/13/hexo-theme/\">hexo-theme</a> </p>","categories":[{"name":"node","path":"api/categories/node.json"}],"tags":[{"name":"heox","path":"api/tags/heox.json"},{"name":"blog","path":"api/tags/blog.json"},{"name":"node","path":"api/tags/node.json"}]}