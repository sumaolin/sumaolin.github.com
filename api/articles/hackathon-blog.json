{"title":"hackathon blog","slug":"hackathon-blog","date":"2016-06-06T08:07:29.000Z","updated":"2022-01-20T04:12:09.025Z","comments":true,"path":"api/articles/hackathon-blog.json","excerpt":"报名参加了 [北京] 6月4号，5号 项目实战之博客系统，虽然没能按时完成项目，但是还是收获很多的，在这里总结下，同事作为 hackathon-blog 的readme ，记录下遇到的坑坑坑……","covers":null,"content":"<p>报名参加了 <a href=\"https://cnodejs.org/topic/5750d47c491b9c4f36910fe9\">[北京] 6月4号，5号 项目实战之博客系统</a>，虽然没能按时完成项目，但是还是收获很多的，在这里总结下，同事作为 <a href=\"https://github.com/sumaolin/hackathon-blog\">hackathon-blog</a> 的readme ，记录下遇到的坑坑坑……</p>\n<span id=\"more\"></span>\n\n<h1 id=\"hackathon-blog\"><a href=\"#hackathon-blog\" class=\"headerlink\" title=\"hackathon-blog\"></a>hackathon-blog</h1><p>参加活动 ： <a href=\"https://cnodejs.org/topic/5750d47c491b9c4f36910fe9\">博客系统实践周末Hackathon</a></p>\n<h2 id=\"2016-06-04\"><a href=\"#2016-06-04\" class=\"headerlink\" title=\"2016-06-04\"></a>2016-06-04</h2><h3 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h3><h4 id=\"1-express不是内部或外部命令\"><a href=\"#1-express不是内部或外部命令\" class=\"headerlink\" title=\"1. express不是内部或外部命令\"></a>1. <code>express不是内部或外部命令</code></h4><p>  最新express4.0版本中将命令工具分家出来了(项目地址:<a href=\"https://github.com/expressjs/generator)%E6%89%80%E4%BB%A5%E6%88%91%E4%BB%AC%E8%BF%98%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7,%E5%91%BD%E4%BB%A4%E5%A6%82%E4%B8%8B\">https://github.com/expressjs/generator)所以我们还需要安装一个命令工具,命令如下</a>:<br>  <code>npm install -g express-generator</code></p>\n<h4 id=\"2-passport-amp-passport-local-的认证问题\"><a href=\"#2-passport-amp-passport-local-的认证问题\" class=\"headerlink\" title=\"2. passport &amp; passport-local 的认证问题\"></a>2. passport &amp; passport-local 的认证问题</h4><h5 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h5><ol>\n<li><p><a href=\"https://scotch.io/tutorials/easy-node-authentication-setup-and-local\">Easy Node Authentication: Setup and Local</a></p>\n</li>\n<li><p><a href=\"https://github.com/rockq-org/express-passport-quick-getstarted\">express-passport-quick-getstarted</a> </p>\n</li>\n<li><p><a href=\"https://segmentfault.com/a/1190000002926232#articleHeader0\">使用passportjs进行登录验证</a></p>\n</li>\n<li><p><a href=\"http://blog.fens.me/nodejs-express-passport/\">Express结合Passport实现登陆认证</a></p>\n</li>\n<li><p><a href=\"http://passportjs.org/docs\">passport doc</a> 官方文档，先看了几个例子，看完官方文档，豁然开朗了，使用了不同的方法去通过认证</p>\n</li>\n</ol>\n<h4 id=\"3-install-phantomjs-error\"><a href=\"#3-install-phantomjs-error\" class=\"headerlink\" title=\"3. install phantomjs error\"></a>3. <code>install phantomjs error</code></h4><p>  当时没遇到这个问题，当时的网络自带翻墙功能，回来再次安装的时候报错，无法安装，<a href=\"https://github.com/rockq-org/hackathon-blog/issues/13\">参考</a> ，就可以解决了</p>\n<h2 id=\"2016-06-05\"><a href=\"#2016-06-05\" class=\"headerlink\" title=\"2016-06-05\"></a>2016-06-05</h2><h3 id=\"react-amp-redux-amp-react-router\"><a href=\"#react-amp-redux-amp-react-router\" class=\"headerlink\" title=\"react &amp; redux &amp; react-router\"></a><a href=\"https://facebook.github.io/react/index.html\">react</a> &amp; <a href=\"https://github.com/reactjs/redux\">redux</a> &amp; <a href=\"https://github.com/reactjs/react-router\">react-router</a></h3><h3 id=\"相关工具\"><a href=\"#相关工具\" class=\"headerlink\" title=\"相关工具\"></a>相关工具</h3><ol>\n<li><a href=\"https://github.com/zalmoxisus/redux-devtools-extension\">redux-devtools-extension</a></li>\n<li><a href=\"https://github.com/facebook/react-devtools\">react-devtools</a></li>\n</ol>\n<h3 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h3><ol>\n<li><a href=\"https://github.com/lewis617/react-redux-tutorial\">React+Redux系列教程</a></li>\n<li><a href=\"http://cn.redux.js.org/\">Redux 中文文档</a></li>\n<li><a href=\"https://github.com/icefox0801/JSErrorMonitor#%E5%BA%94%E7%94%A8%E7%9A%84%E6%A1%86%E6%9E%B6%E5%92%8C%E5%BA%93\">文档收集</a></li>\n</ol>\n<h2 id=\"2016-06-06\"><a href=\"#2016-06-06\" class=\"headerlink\" title=\"2016-06-06\"></a>2016-06-06</h2><p>  两天的 hackathon 活动，感觉到自己的不足，要恶补下自己的基础知识了，首先完成这个blog 的认为</p>\n<ol>\n<li>passport-local 认证     【** 2016-06-08 18:04:17 ** 完成】</li>\n<li>react &amp; redux 登录注册页面</li>\n<li>blog 编辑器</li>\n<li>blog 列表（编辑删除），tag 功能！</li>\n</ol>\n<h2 id=\"2016-06-07\"><a href=\"#2016-06-07\" class=\"headerlink\" title=\"2016-06-07\"></a>2016-06-07</h2><p>  <a href=\"https://github.com/ilivebox/the-little-mongodb-book\">The Little MongoDB Book  中文版 - v1.0</a> 【介绍的很全面，很适合入门！】</p>\n<h2 id=\"2016-06-08\"><a href=\"#2016-06-08\" class=\"headerlink\" title=\"2016-06-08\"></a>2016-06-08</h2><h3 id=\"疑问\"><a href=\"#疑问\" class=\"headerlink\" title=\"疑问\"></a>疑问</h3><ol>\n<li>chrome plugin Postman 中 body 类型： form-data， x-www-form-urlencoded， raw， binary 的疑问区别<blockquote>\n<p>在hackathon-blog 活动中 推荐使用的postman 并且@hain 演示推荐了 raw 的方式提交数据，回来自己再弄，可是怎么也体检不成功了！一直怀疑自己 body-parse 模块配置有问题，看了下面的文章才豁然开朗</p>\n</blockquote>\n</li>\n</ol>\n<p>  <a href=\"https://github.com/ilivebox/the-little-mongodb-book/blob/master/zh-cn/mongodb.markdown\">四种常见的 POST 提交数据方式</a></p>\n<p>  总结下： </p>\n<ul>\n<li>x-www-form-urlencoded 是from 表单默认提交方式， <code>Content-Type: application/x-www-form-urlencoded</code></li>\n<li>form-data 是form 上传文件 时候用到的方式， <code>Content-Type: multipart/form-data</code></li>\n<li>raw 是自定义 提交表单的格式 的，后面可以选择application/json 或者 application/xml 等方式，等同自定义了 <code>Content-type</code>的类型；</li>\n<li>binary 根据以前上传文件的理解，是最新的通过二进制的形式上传数据</li>\n</ul>\n<h2 id=\"2016-06-12\"><a href=\"#2016-06-12\" class=\"headerlink\" title=\"2016-06-12\"></a>2016-06-12</h2><p>  端午前接口按规划的弄好了，按计划改实现react &amp;  redux 登录注册页面了， </p>\n<h2 id=\"2016-06-15\"><a href=\"#2016-06-15\" class=\"headerlink\" title=\"2016-06-15\"></a>2016-06-15</h2><h3 id=\"已读\"><a href=\"#已读\" class=\"headerlink\" title=\"已读\"></a>已读</h3><ol>\n<li><p><a href=\"https://blog.jimmylv.info/2016-01-22-React.js-Best-Practices-for-2016/\">【译】展望2016，React.js 最佳实践 (中英对照版)</a></p>\n<blockquote>\n<p>很概况全面的介绍了下 react 中用到的相关技术</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/petehunt/react-howto/blob/master/README-zh.md\">如何学习React</a></p>\n<blockquote>\n<p>怎样学习 react 系列</p>\n</blockquote>\n</li>\n<li><p><a href=\"http://chatting8.com/?p=883\">Redux是如何工作的 (一)</a></p>\n<blockquote>\n<p>redux 通过管理state 树来管理 react 组件熟的更新</p>\n</blockquote>\n</li>\n<li><p><a href=\"http://geek.csdn.net/news/detail/81106\">React知识库内容精选：10篇文章让你迅速了解该框架</a></p>\n</li>\n</ol>\n<h3 id=\"未读\"><a href=\"#未读\" class=\"headerlink\" title=\"未读\"></a>未读</h3><ol>\n<li><p>【系列】<a href=\"http://mulgore.github.io/2016/05/23/follow-react-lesson/\">和我一起实战react</a></p>\n</li>\n<li><p>【系列】<a href=\"http://mulgore.github.io/2016/06/01/used-CNodeAPI-for-development-of-react-webapp/\">基于CNodeAPI使用react开发一个完整的Web应用</a></p>\n</li>\n</ol>\n<h2 id=\"2016-07-06\"><a href=\"#2016-07-06\" class=\"headerlink\" title=\"2016-07-06\"></a>2016-07-06</h2><p>  上面是关于react 资料的搜集，内容太多，后面参照hackathon-blog 中给出的关于react的资料: <a href=\"http://guoyongfeng.github.io/idoc/index.html\">React课程学习</a>, 整个资料循序渐进，挺易懂的！关于学习过程中的问题单开一章： <a href=\"/2016/07/06/React%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/\">React课程学习</a></p>\n","more":"<h1 id=\"hackathon-blog\"><a href=\"#hackathon-blog\" class=\"headerlink\" title=\"hackathon-blog\"></a>hackathon-blog</h1><p>参加活动 ： <a href=\"https://cnodejs.org/topic/5750d47c491b9c4f36910fe9\">博客系统实践周末Hackathon</a></p>\n<h2 id=\"2016-06-04\"><a href=\"#2016-06-04\" class=\"headerlink\" title=\"2016-06-04\"></a>2016-06-04</h2><h3 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h3><h4 id=\"1-express不是内部或外部命令\"><a href=\"#1-express不是内部或外部命令\" class=\"headerlink\" title=\"1. express不是内部或外部命令\"></a>1. <code>express不是内部或外部命令</code></h4><p>  最新express4.0版本中将命令工具分家出来了(项目地址:<a href=\"https://github.com/expressjs/generator)%E6%89%80%E4%BB%A5%E6%88%91%E4%BB%AC%E8%BF%98%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7,%E5%91%BD%E4%BB%A4%E5%A6%82%E4%B8%8B\">https://github.com/expressjs/generator)所以我们还需要安装一个命令工具,命令如下</a>:<br>  <code>npm install -g express-generator</code></p>\n<h4 id=\"2-passport-amp-passport-local-的认证问题\"><a href=\"#2-passport-amp-passport-local-的认证问题\" class=\"headerlink\" title=\"2. passport &amp; passport-local 的认证问题\"></a>2. passport &amp; passport-local 的认证问题</h4><h5 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h5><ol>\n<li><p><a href=\"https://scotch.io/tutorials/easy-node-authentication-setup-and-local\">Easy Node Authentication: Setup and Local</a></p>\n</li>\n<li><p><a href=\"https://github.com/rockq-org/express-passport-quick-getstarted\">express-passport-quick-getstarted</a> </p>\n</li>\n<li><p><a href=\"https://segmentfault.com/a/1190000002926232#articleHeader0\">使用passportjs进行登录验证</a></p>\n</li>\n<li><p><a href=\"http://blog.fens.me/nodejs-express-passport/\">Express结合Passport实现登陆认证</a></p>\n</li>\n<li><p><a href=\"http://passportjs.org/docs\">passport doc</a> 官方文档，先看了几个例子，看完官方文档，豁然开朗了，使用了不同的方法去通过认证</p>\n</li>\n</ol>\n<h4 id=\"3-install-phantomjs-error\"><a href=\"#3-install-phantomjs-error\" class=\"headerlink\" title=\"3. install phantomjs error\"></a>3. <code>install phantomjs error</code></h4><p>  当时没遇到这个问题，当时的网络自带翻墙功能，回来再次安装的时候报错，无法安装，<a href=\"https://github.com/rockq-org/hackathon-blog/issues/13\">参考</a> ，就可以解决了</p>\n<h2 id=\"2016-06-05\"><a href=\"#2016-06-05\" class=\"headerlink\" title=\"2016-06-05\"></a>2016-06-05</h2><h3 id=\"react-amp-redux-amp-react-router\"><a href=\"#react-amp-redux-amp-react-router\" class=\"headerlink\" title=\"react &amp; redux &amp; react-router\"></a><a href=\"https://facebook.github.io/react/index.html\">react</a> &amp; <a href=\"https://github.com/reactjs/redux\">redux</a> &amp; <a href=\"https://github.com/reactjs/react-router\">react-router</a></h3><h3 id=\"相关工具\"><a href=\"#相关工具\" class=\"headerlink\" title=\"相关工具\"></a>相关工具</h3><ol>\n<li><a href=\"https://github.com/zalmoxisus/redux-devtools-extension\">redux-devtools-extension</a></li>\n<li><a href=\"https://github.com/facebook/react-devtools\">react-devtools</a></li>\n</ol>\n<h3 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h3><ol>\n<li><a href=\"https://github.com/lewis617/react-redux-tutorial\">React+Redux系列教程</a></li>\n<li><a href=\"http://cn.redux.js.org/\">Redux 中文文档</a></li>\n<li><a href=\"https://github.com/icefox0801/JSErrorMonitor#%E5%BA%94%E7%94%A8%E7%9A%84%E6%A1%86%E6%9E%B6%E5%92%8C%E5%BA%93\">文档收集</a></li>\n</ol>\n<h2 id=\"2016-06-06\"><a href=\"#2016-06-06\" class=\"headerlink\" title=\"2016-06-06\"></a>2016-06-06</h2><p>  两天的 hackathon 活动，感觉到自己的不足，要恶补下自己的基础知识了，首先完成这个blog 的认为</p>\n<ol>\n<li>passport-local 认证     【** 2016-06-08 18:04:17 ** 完成】</li>\n<li>react &amp; redux 登录注册页面</li>\n<li>blog 编辑器</li>\n<li>blog 列表（编辑删除），tag 功能！</li>\n</ol>\n<h2 id=\"2016-06-07\"><a href=\"#2016-06-07\" class=\"headerlink\" title=\"2016-06-07\"></a>2016-06-07</h2><p>  <a href=\"https://github.com/ilivebox/the-little-mongodb-book\">The Little MongoDB Book  中文版 - v1.0</a> 【介绍的很全面，很适合入门！】</p>\n<h2 id=\"2016-06-08\"><a href=\"#2016-06-08\" class=\"headerlink\" title=\"2016-06-08\"></a>2016-06-08</h2><h3 id=\"疑问\"><a href=\"#疑问\" class=\"headerlink\" title=\"疑问\"></a>疑问</h3><ol>\n<li>chrome plugin Postman 中 body 类型： form-data， x-www-form-urlencoded， raw， binary 的疑问区别<blockquote>\n<p>在hackathon-blog 活动中 推荐使用的postman 并且@hain 演示推荐了 raw 的方式提交数据，回来自己再弄，可是怎么也体检不成功了！一直怀疑自己 body-parse 模块配置有问题，看了下面的文章才豁然开朗</p>\n</blockquote>\n</li>\n</ol>\n<p>  <a href=\"https://github.com/ilivebox/the-little-mongodb-book/blob/master/zh-cn/mongodb.markdown\">四种常见的 POST 提交数据方式</a></p>\n<p>  总结下： </p>\n<ul>\n<li>x-www-form-urlencoded 是from 表单默认提交方式， <code>Content-Type: application/x-www-form-urlencoded</code></li>\n<li>form-data 是form 上传文件 时候用到的方式， <code>Content-Type: multipart/form-data</code></li>\n<li>raw 是自定义 提交表单的格式 的，后面可以选择application/json 或者 application/xml 等方式，等同自定义了 <code>Content-type</code>的类型；</li>\n<li>binary 根据以前上传文件的理解，是最新的通过二进制的形式上传数据</li>\n</ul>\n<h2 id=\"2016-06-12\"><a href=\"#2016-06-12\" class=\"headerlink\" title=\"2016-06-12\"></a>2016-06-12</h2><p>  端午前接口按规划的弄好了，按计划改实现react &amp;  redux 登录注册页面了， </p>\n<h2 id=\"2016-06-15\"><a href=\"#2016-06-15\" class=\"headerlink\" title=\"2016-06-15\"></a>2016-06-15</h2><h3 id=\"已读\"><a href=\"#已读\" class=\"headerlink\" title=\"已读\"></a>已读</h3><ol>\n<li><p><a href=\"https://blog.jimmylv.info/2016-01-22-React.js-Best-Practices-for-2016/\">【译】展望2016，React.js 最佳实践 (中英对照版)</a></p>\n<blockquote>\n<p>很概况全面的介绍了下 react 中用到的相关技术</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/petehunt/react-howto/blob/master/README-zh.md\">如何学习React</a></p>\n<blockquote>\n<p>怎样学习 react 系列</p>\n</blockquote>\n</li>\n<li><p><a href=\"http://chatting8.com/?p=883\">Redux是如何工作的 (一)</a></p>\n<blockquote>\n<p>redux 通过管理state 树来管理 react 组件熟的更新</p>\n</blockquote>\n</li>\n<li><p><a href=\"http://geek.csdn.net/news/detail/81106\">React知识库内容精选：10篇文章让你迅速了解该框架</a></p>\n</li>\n</ol>\n<h3 id=\"未读\"><a href=\"#未读\" class=\"headerlink\" title=\"未读\"></a>未读</h3><ol>\n<li><p>【系列】<a href=\"http://mulgore.github.io/2016/05/23/follow-react-lesson/\">和我一起实战react</a></p>\n</li>\n<li><p>【系列】<a href=\"http://mulgore.github.io/2016/06/01/used-CNodeAPI-for-development-of-react-webapp/\">基于CNodeAPI使用react开发一个完整的Web应用</a></p>\n</li>\n</ol>\n<h2 id=\"2016-07-06\"><a href=\"#2016-07-06\" class=\"headerlink\" title=\"2016-07-06\"></a>2016-07-06</h2><p>  上面是关于react 资料的搜集，内容太多，后面参照hackathon-blog 中给出的关于react的资料: <a href=\"http://guoyongfeng.github.io/idoc/index.html\">React课程学习</a>, 整个资料循序渐进，挺易懂的！关于学习过程中的问题单开一章： <a href=\"/2016/07/06/React%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/\">React课程学习</a></p>","categories":[],"tags":[]}